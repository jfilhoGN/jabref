% Encoding: UTF-8


@InProceedings{Almeida-etal:2002,
  Title                    = {{AMBAP}: a support environment for learning of programming},
  Author                   = {Almeida, E. and Costa, E. and Silva, K. and Paes, R. and Almeida, A. and Braga, J.},
  Booktitle                = {X Workshop Sobre Educação em Computação},
  Year                     = {2002},
  Pages                    = {429--438},

  Abstract                 = {Using AMBAP students can focus on learning the programming logic to solve problems, and understand, by using simulation and exercises, the execution of the solution specified in the computer. Developed by a group at Federal University of Alagoas, this environment helps students to become real programmers, enhancing their logic rationale, and helping the student to ellaborate and understand every phase of the creation of a project, independent of the programming language.},
  Abstract-orig            = {Com AMBAP o estudante poderá se concentrar no aprendizado da lógica de programação para solucionar problemas, e entender através de simulações e exercícios a execução da solução apresentada no computador. Desenvolvido por uma equipe da Universidade Federal de Alagoas, este ambiente ajudará alunos a se tornarem reais programadores, aperfeiçoando o raciocínio lógico, e auxiliando o estudante a elaborar e compreender toda a etapa de criação de projetos, seja qual for a linguagem de programação.},
  Crossref                 = {proceedings:wei:2005},
  Lang                     = {pt},
  Owner                    = {mariane},
  Status                   = {found(backward-snowballing), selected(abstract)},
  Timestamp                = {2014.05.09},
  Title-orig               = {{AMBAP}: Um Ambiente de Apoio ao Aprendizado de Programação}
}

@InProceedings{Arnow:1995,
  Title                    = {{:-)} When You Grade That: Using e-Mail and the Network in Programming Courses},
  Author                   = {Arnow, David},
  Year                     = {1995},
  Pages                    = {10--13},

  Abstract                 = {We have been using network facilities and e-mail for submitting and responding to homework assignments, faculty-student communication and as a general means for providing instructional material (assignments, solutions, sample quizzes, etc.). The most important component of this is a homework programming assignment checker. These methods have been successful in alleviating a number of problems, including student difficulty in making faculty office hours, slow feedback on homework assignments, heavier teaching loads and larger classes. In addition, several unexpected benefits resulted as well.},
  Crossref                 = {proceedings:sac:1995},
  Doi                      = {10.1145/315891.315894},
  Keywords                 = {automated program checking, e-mail, network classrooms},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@Article{Becker-etal:2014,
  Title                    = {{Besouro}: A framework for exploring compliance rules in automatic {TDD} behavior assessment},
  Author                   = {Becker, Karin and Pedroso, Bruno S. C. and Pimenta, M. S. and Jacobi, R. P.},
  Journal                  = {Information and Software Technology},
  Year                     = {2014},

  Month                    = jun,
  Pages                    = {1--15},

  Abstract                 = {The improvements promoted by Test-Driven Design (TDD) have not been confirmed by quantitative assessment studies. To a great extent, the problem lies in the lack of a rigorous definition for TDD. An emerging approach has been to measure the conformance of \{TDD\} practices with the support of automated systems that embed an operational definition, which represent the specific \{TDD\} process assumed and the validation tests used to determine its presence and quantity. The empirical construction of \{TDD\} understanding and consensus building requires the ability of comparing different definitions, evaluating them with regard to practitioners’ perception, and exploring code information for improvement of automatic assessment. Objective This paper describes Besouro, a framework targeted at the development of systems for automatic \{TDD\} behavior assessment. The main rationale of Besouro’s design is the ability to compare distinct operational definitions, evaluate them with regard to users’ perception, and explore code information for further analysis and conformance assessment improvement. Method We developed an architecture with clear separation of concerns, which enables to vary: (a) the atomic events and respective metrics to be collected from developing and testing environments; (b) the organization of atomic events in streams of actions or processes; and (c) the classification and assessment components for each set of operational definitions adopted. The architecture also includes a mechanism for on-line user assessment awareness and feedback, and integrates event-related information with the respective code in a code version system. Results We illustrate the usefulness of Besouro’s features for understanding the actions and processes underlying \{TDD\} through a prototype developed to support an experiment based on user feedback. We show how it was possible to compare variations of a same operational definition by exploring users’ feedback, and use source code to improve the automatic classification of \{TDD\} practices. Conclusion Understanding the actions and processes underlying successful \{TDD\} application is key for leveraging \{TDD\} benefits. In the absence of a rigorous definition for TDD, the proposed approach aims at building consensus from experimentation and empirical validation.},
  Crossref                 = {journal:ist:elsevier},
  Doi                      = {10.1016/j.infsof.2014.06.003},
  ISSN                     = {0950-5849},
  Keywords                 = {\{TDD\}},
  Lang                     = {en},
  Owner                    = {mariane},
  References               = {Janzen-Saiedian:2008},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.10.15},
  Url                      = {http://www.sciencedirect.com/science/article/pii/S0950584914001426}
}

@InProceedings{Benford-etal:1993,
  Title                    = {{Ceilidh}: a course administration and marking system},
  Author                   = {Benford, S. and Burke, E. and Foxley, E. and Gutteridge, N. and Mohd, Z.},
  Year                     = {1993},
  Pages                    = {364--372},

  Crossref                 = {proceedings:iccbl:1993},
  Lang                     = {en},
  Owner                    = {mariane},
  Status                   = {found(backward-snowballing), selected(abstract)},
  Timestamp                = {2014.06.03}
}

@InProceedings{Benford-etal:1995,
  Title                    = {The {Ceilidh} System for the Automatic Grading of Students on Programming Courses},
  Author                   = {Benford, S. D. and Burke, E. K. and Foxley, E. and Higgins, C. A.},
  Year                     = {1995},
  Pages                    = {176--182},

  Abstract                 = {We give an overview of the Ceilidh courseware system. This is a general purpose system supporting the provision of student programming courses, and performing all the courseware assessment and administration related to a given course. It is currently distributed to over 100 universities in 15 countries, and supports 7 courses.We will discuss first the overall structure of the system, and then summarise various different user views of the facilities it offers. This will give a good picture of the user view of the software. We will then describe more details the marking metrics and their implementation, and the effects (some of them unexpected) that the system has had on the student learning process.},
  Crossref                 = {proceedings:acmse:1995},
  Doi                      = {10.1145/1122018.1122050},
  Keywords                 = {administration, automatic assessment, courseware, education, software metrics},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Brito-etal:2011,
  Title                    = {Computer Supported Collaborative Learning for helping novice students acquire self-regulated problem-solving skills in computer programming},
  Author                   = {Brito, S. R. and Silva, A. S. and Tavares, O. L. and Favero, E. L. and Francês, C. R. L.},
  Year                     = {2011},
  Pages                    = {1--9},

  Abstract                 = {This paper presents the integration of a viewer and simulator of programs into an environment learning to support learning programming in initial classes of Engineering, Computing and Information Systems Courses. The integration proposed was based on a redesign of the architectureto combine resources avaliable in learning environment with an automatic evaluator of programs and with a new resource that promotes collaborative feedback through peers review. The new architecture resulting from this study is based on principles of collaborative feedback as a way of developing self-assessment skills in the programming disciplines},
  Crossref                 = {proceedings:worldcomp-fecs:2011},
  Keywords                 = {Learning computers programming, collaborative feedback, self-assessment skills, self-regulated learning, automatic evaluation of programs},
  Lang                     = {en},
  References               = {Menezes-etal:2008, Mota-etal:2008, software:moodle, Mota-etal:2009, Moreira-Favero:2009, Stamouli-etal:2006},
  Status                   = {found(backward-snowballing), selected(full-text) found(forward-snowballing), selected(abstract)},
  Timestamp                = {2013-12-11}
}

@InProceedings{Buck-Stucki:2000,
  Title                    = {Design early considered harmful: graduated exposure to complexity and structure based on levels of cognitive development},
  Author                   = {Buck, Duane and Stucki, David J.},
  Year                     = {2000},
  Pages                    = {75--79},

  Abstract                 = {We have recognized that the natural tendency to teach according to the structure of one's own understanding runs contrary to established models of cognitive development. Bloom's Taxonomy has provided a basis for establishing a more efficacious pedagogy. Emphasizing a hierarchical progression of skill sets and gradual learning through example, our approach advocates teaching software development from the inside/out rather than beginning with either console apps or monolithic designs.},
  Crossref                 = {proceedings:sigcse:2000},
  Doi                      = {10.1145/330908.331817},
  Keywords                 = {Bloom's taxonomy, CS1, CS2, control structure diagrams, formal specifications, inside/out pedagogy},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Buck-Stucki:2001,
  Title                    = {{JKarelRobot}: a case study in supporting levels of cognitive development in the computer science curriculum},
  Author                   = {Buck, Duane and Stucki, David J.},
  Year                     = {2001},
  Pages                    = {16--20},

  Abstract                 = {We introduce a new software tool, JKarelRobot, for supporting an Inside/Out pedagogy in introductory programming courses. Extending the original conception of "Karel the Robot", with Bloom's Taxonomy of Educational Objectives as a guiding principle, we have provided a mechanism for designing exercises that are cognitively appropriate to the developmental levels of our students. JKarelRobot is platform independent (written in Java) and language/paradigm independent, supporting Pascal, Java, and Lisp style environments.},
  Crossref                 = {proceedings:sigcse:2001},
  Doi                      = {10.1145/364447.364529},
  Keywords                 = {Bloom's taxonomy, CS1, CS2, inside/out pedagogy, karel the robot, software tools},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract), excluded(fulltext)}
}

@InProceedings{Campos-Ferreira:2004,
  Title                    = {{BOCA}: a support system for programming contests},
  Author                   = {Campos, Cassio P. and Ferreira, C. E.},
  Year                     = {2004},
  Pages                    = {27--37},

  Abstract                 = {In this article we describe BOCA, a software for supporting programming contests developed to be used in the Maratona de Programação of the Brazilian Computing Society. The system can also be used for supporting disciplines that make evaluation of student assignments during the classes.},
  Abstract-orig            = {Neste artigo apresentamos o BOCA, um sistema de apoio acompetições de programação desenvolvido para ser usado na Maratona deProgramação da Sociedade Brasileira de Computação. O sistema pode ser usado também no apoio a disciplinas em que se faça uso de submissão e correção de trabalhos durante as aulas.},
  Crossref                 = {proceedings:wei:2004},
  Lang                     = {pt},
  Owner                    = {mariane},
  References               = {Skiena-Revilla:2003},
  Status                   = {found(backward-snowballing), selected(full-text)},
  Timestamp                = {2013.09.26},
  Title-orig               = {{BOCA}: um sistema de apoio a competições de programação},
  Url                      = {http://www.ime.usp.br/~cassio/boca/campos-ferreira-wei2004.pdf}
}

@InProceedings{Chaves-etal:2013,
  Title                    = {{MOJO}: a tool to aid professors in programming courses},
  Author                   = {Chaves, J. O. and Castro, A. and Lima, R. and Lima, M. V. and Ferreira, K.},
  Year                     = {2013},
  Pages                    = {1--11},

  Abstract                 = {Programming disciplines are essential in computing courses, and require a greater involvement on the part of the teacher who often cannot perform proper monitoring of their students. The long wait for the student to ask questions or present their results are just elements that contribute to demotivation, and in some cases even withdrawal. This can be even more serious when the mode of teaching is the distance, which is minimal or no personal contact between teacher and student. With the overload of activities, the teacher has an alternative use of automated tools that serve to aid the accomplishment of their tasks. Given this scenario, and to contribute to the improvement of teaching and learning in the disciplines of programming, this paper proposes a tool that automates the process of preparation, submission and evaluation of practical programming, based on a process similar to hat used in marathons programming. The presented environment integrates with Moodle and supports education whether in the classroom or distance learning mode.},
  Abstract-orig            = {Disciplinas de programação são essenciais em cursos de computação, e exigem um grande envolvimento por parte do professor que, muitas vezes, não consegue realizar o devido acompanhamento de seus alunos. A longa espera do aluno para tirar dúvidas ou para apresentar seus resultados são elementos que acabam contribuindo para a desmotivação, e em alguns casos até desistência do curso. Isso pode ser ainda mais grave quando a modalidade de ensino é a distância, onde é mínimo ou inexistente o contato pessoal entre professor e aluno. Com a sobrecarga de atividades, o professor tem como alternativa a utilização de ferramentas automatizadas que sirvam de auxílio para a realização de suas tarefas. Diante deste cenário, e visando contribuir com a melhoria do ensino e aprendizagem em disciplinas de programação, este artigo apresenta uma ferramenta para a automatização do processo de elaboração, submissão e avaliação de atividades práticas de programação, com base em um processo semelhante ao adotado em maratonas de programação. O ambiente apresentado é integrado ao Moodle e apoia o ensino quer seja na modalidade presencial ou na modalidade de ensino à distância.},
  Crossref                 = {proceedings:esud:2013},
  Keywords                 = {programming disciplines, teacher, student, distance learning},
  Keywords-orig            = {disciplinas de programação, professor, aluno, ensino à distância},
  Lang                     = {pt},
  References               = {Sirotheau-etal:2011, Mota-etal:2008, Moreira-Favero:2009, Kurnia-etal:2001, Franca-Soares:2011, Ferradin-Stephani:2005, Campos-Ferreira:2004, software:moodle, Souza-etal:2011:cseet, Souza-etal:2012},
  Status                   = {found(suggestion), selected(full-text)},
  Timestamp                = {2013-09-22},
  Title-orig               = {{MOJO}: uma ferramenta para auxiliar o professor em disciplinas de programação}
}

@Article{Chaves-etal:joac:2013,
  Title                    = {A integration module with online judges to support programming activities},
  Author                   = {Chaves, J. O. and Castro, A. and Lima, R. and Lima, M. V. and Ferreira, K.},
  Year                     = {2013},
  Number                   = {1},
  Pages                    = {76--82},
  Volume                   = {9},

  Abstract                 = {Disciplines that require a lot of programming needs an involved teacher who often cannot perform efficient monitoring of the student. The long wait for the student to ask questions or present their results are elements that don’t contribute to motivation. Due to the overload of teacher’s activities, the use of automated tools support monitoring becomes an interesting alternative. Thus, in order to contribute to the improvement of teaching and learning in programming disciplines, this article proposes to automate the process of preparing, submitting programming practices and their evaluations ba- sed on a process similar to that used in programming marathons, presenting an environment that integrated the Moodle supports programming teaching both in person and distance.},
  Abstract-orig            = {Disciplinas de programação exigem um grande envolvimento do professor que, muitas vezes, não consegue realizar um acompanhamento eficiente do aluno. A longa espera do aluno para tirar dúvidas ou para apresentar seus resultados são elementos que podem contribuir para sua desmotivação. Devido à sobrecarga de atividades do professor, o uso de ferramentas automatizadas de apoio ao acompanhamento se torna uma boa alternativa. Dessa maneira, visando a contribuir com a melhoria das condições de ensino e aprendizagem em disciplinas de programação, este artigo propõe a automatização do processo de elaboração, submissão de atividades práticas de programação e de suas avaliações, com base em um processo semelhante ao adotado em maratonas de programação, apresentando um ambiente que, integrado ao Moodle, apoie o ensino de programação, tanto presencialmente como à distância.},
  Crossref                 = {journal:uscs:joac},
  Keywords                 = {Programming disciplines, Teacher, Teaching, Moodle},
  Lang                     = {pt},
  Owner                    = {mariane},
  References               = {Souza-etal:2012, Sirotheau-etal:2011, Moreira-Favero:2009},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.09.29},
  Title-orig               = {Um Módulo de Integração com Juízes On-line para Auxiliar Atividades de Programação}
}

@InProceedings{Chaves-etal:tise:2013,
  Title                    = {A tool to aid the process of teaching and learning in the disciplines of Programming Computer},
  Author                   = {Chaves, J. O. and Castro, A. and Lima, R. and Lima, M. V. and Ferreira, K. and Façanha, Agebson},
  Year                     = {2013},
  Month                    = {December},
  Pages                    = {523--526},

  Abstract                 = {Online Judges are commonly used in programming marathons.They are famous for their repository of questions and automatic evaluation of source code. The idea of integrating these systems into Moodle came from the demand for more professor involvement in programming disciplines, and as a way to provide a greater number of issues for use. Usually the professor is overwhelmed by preparing, submitting, evaluating and providing the necessary feedback to the students of the issues - which can negatively impact the care given to the classes. Aiming to reduce this overhead, this paper presents MOJO, a tool to automate this process.},
  Abstract-orig            = {Os sistemas de Juízes Online são comumente utilizados em maratonas de programação. Eles são famosos pelo seu repositório de questões e avaliação automática de código-fonte. A ideia de integrar estes sistemas ao Moodle surgiu da exigência de um maior envolvimento do professor de disciplinas de programação, e como uma forma de disponibilizar um maior número de questões para utilização. Normalmente o professor fica sobrecarregado elaborar, submeter, avaliar e fornecer o feedback necessário das questões aos os alunos – o que pode impactar negativamente na assistência dada à turmas. Visando diminuir esta sobrecarga, este artigo apresenta o MOJO, uma ferramenta para automatização desse processo.},
  Crossref                 = {proceedings:tise:2013},
  Keywords                 = {MOJO, Programming Disciplines, Teaching, Learning},
  Lang                     = {pt},
  Owner                    = {mariane},
  References               = {Chaves-etal:2013, Campos-Ferreira:2004},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.09.29},
  Title-orig               = {Uma Ferramenta de Auxílio ao Processo de Ensino-Aprendizagem para Disciplinas de Programação de Computadores}
}

@Article{Chaves-etal:cinted:2013,
  Title                    = {A Tool Based on Online Judges to Support Computer Programming Activities on Moodle},
  Author                   = {Chaves, J. O. and Castro, A. and Lima, R. and Lima, M. V. and Ferreira, K.},
  Year                     = {2013},
  Pages                    = {1--10},

  Abstract                 = {Online Judges are systems that compile, execute and test source code performing the automatic assessment of these codes. This method is used in many contests and programming marathons. These systems can be easily found on the Internet, where provide several problems to be submitted for resolution and they are so attractive that many students begin to practice their skills in programming them. Based on this, this paper presents a tool to integrate Online Judges into Moodle, providing the convenience of a Virtual Learning Environment together with a system of automatic assessment.},
  Abstract-orig            = {Os Juízes Online são sistemas que compilam, executam e testam códigos-fonte realizando a avaliação automática destes códigos. Este método é utilizado em muitos concursos e maratonas de programação. Estes sistemas podem ser facilmente encontrados na Internet, onde disponibilizam vários problemas a serem submetidos para resolução, e são tão atraentes que muitos alunos começam a praticar suas habilidades em programação neles. Com base nisto, este artigo apresenta uma ferramenta para integrar os Juízes Online ao Moodle, fornecendo a praticidade de um Ambiente Virtual de Aprendizagem junto a um sistema de avaliação automática.},
  Crossref                 = {journal:cinted:2013},
  Keywords                 = {online judges, programming, moodle, automatic assessment},
  Lang                     = {pt},
  Owner                    = {mariane},
  References               = {Souza-etal:2012, Sirotheau-etal:2011, Franca-Soares:2011, Moreira-Favero:2009},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.09.29},
  Title-orig               = {Uma Ferramenta Baseada em Juízes Online para Apoio às Atividades de Programação de Computadores no Moodle}
}

@InProceedings{Chaves-etal:sbie:2013,
  Title                    = {Integrating with {Moodle} and online judges to support programming activities},
  Author                   = {Chaves, J. O. and Castro, A. F. and Lima, R. W. and Lima, M. V. and Ferreira, K.},
  Year                     = {2013},
  Pages                    = {244-254},

  Abstract                 = {This paper presents a tool that integrates Moodle and Online Judges. The tool automates the process of elaboration, submission and evaluation of programming activities, reducing the overhead of the teacher's tasks and giving the necessary support to students. Besides to support in the teaching modality in classroom or distance. The tool allows to carry out activities in various programming languages, among them Java, C and C ++.},
  Abstract-orig            = {Com o objetivo de contribuir para a melhoria das condições de ensino e aprendizagem de programação, este trabalho apresenta uma ferramenta que integra os Juízes Online ao Moodle. A ferramenta automatiza o processo de elaboração, submissão e avaliação de atividades de programação, diminuindo a sobrecarga de tarefas do professor e dando o suporte necessário aos alunos, podendo, ainda, ser utilizada na educação presencial ou a distância. A ferramenta permite a realização de atividades em várias linguagens de programação, dentre elas Java, C e C++.},
  Crossref                 = {proceedings:sbie:2013},
  Lang                     = {pt},
  Owner                    = {mariane},
  References               = {Franca-Soares:2011, Moreira-Favero:2009},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.10.04},
  Title-orig               = {Integrando Moodle e Juízes Online no Apoio a Atividades de Programação}
}

@InProceedings{Churcher-etal:1998,
  Title                    = {{CUTE} -- The Design and Evolution of a First Year Programming Environment},
  Author                   = {Churcher, N. I. and Cockburn, A. J. G. and McMaster, B. N. and Horlor, J.},
  Year                     = {1998},
  Pages                    = {26--29},

  Abstract                 = {A first computer science course should give students an appreciation of software engineering principles and not merely teach programming skills in isolation. This is a difficult task, especially within the constraints imposed by a semester system. We report the evolution of the Canterbury University Teaching Environment (CUTE) which we have used successfully since 1993 to support our first year programming courses. CUTE provides novice programmers with a simple graphical user interface (GUI) to important software development tools and services while shielding them from the underlying Unix system. This not only allows students to focus on core material within the constraints of the semester system but also simplifies administration.},
  Crossref                 = {proceedings:seep:1998},
  Doi                      = {10.1109/SEEP.1998.707644},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Clements-etal:2010,
  Title                    = {Overcoming Obstacles to Test-Driven Learning on Day One},
  Author                   = {Clements, J. and Janzen, D.},
  Booktitle                = {Software Testing, Verification, and Validation Workshops (ICSTW), 2010 Third International Conference on},
  Year                     = {2010},
  Month                    = {April},
  Pages                    = {448-453},

  Abstract                 = {We describe the preliminary construction of a web-based tool for test-driven learning in the first weeks of programming. We discuss obstacles to test-driven learning - both pragmatic and ideological - and describe the ways that we believe our tool overcomes these obstacles.},
  Crossref                 = {proceedings:cstvvw:2010},
  Doi                      = {10.1109/ICSTW.2010.33},
  Keywords                 = {Internet;computer aided instruction;computer science education;program testing;Web-based tool;ideological learning;pragmatic learning;test-driven learning;Cognitive science;Computer science;Concrete;Educational programs;Humans;Performance evaluation;Process design;Programming profession;Software maintenance;Software testing;online-training;pedagogy;test-driven-development;test-driven-learning},
  References               = {Edwards:2003, Janzen-Saiedian:2008},
  Status                   = {found(backward-snowballing), selected(abstract) found(forward-snowballing), selected(abstract)}
}

@InProceedings{Comer-Roggio:2002,
  Title                    = {Teaching a Java-based {CS1} course in an academically-diverse environment},
  Author                   = {Comer, James and Roggio, Robert},
  Year                     = {2002},
  Pages                    = {142--146},

  Abstract                 = {The Texas Christian University (TCU) Computer Science Department was established in 1981. From the outset, the Department's CS1 course has presented significant teaching challenges due to the wide diversity of student's taking the class. Traditionally, only 25-35% of the students enrolled in the course are computing science majors, the remaining being students from a wide diversity of disciplines, many of which are non-science based. Despite the diversity, it has been necessary for the course, and its content, to be structured to satisfy essential core requirements for students majoring in computer science and computer information science as well as to meet program requirements for the many non-computer science majors taking the course. This paper discusses some of the unique issues associated with teaching a Java-based CS1 course to a very diverse group of students, the majority of which have very unsophisticated problem solving skills, and little or no programming expertise. A representative set of experiments and programming assignments are included.},
  Crossref                 = {proceedings:sigcse:2002},
  Doi                      = {10.1145/563340.563396},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Decker-Hirshfield:1994,
  Title                    = {The top 10 reasons why object-oriented programming can't be taught in {CS 1}},
  Author                   = {Decker, Rick and Hirshfield, Stuart},
  Year                     = {1994},
  Pages                    = {51--55},

  Abstract                 = {Over the past year we have changed our CS 1 course from a standard Pascal-based, procedural programming course into one that emphasizes C++ and object-oriented programming (OOP). While our experience to date indicates that this was a good decision for both our students and our department, the decision did not come easy. We struggled long and hard with many, if not most, of the questions and issues that have come to be associated with teaching OOP to undergraduates. This paper recounts our struggles, and presents our responses to the more serious of the pedagogical questions that we considered. In hindsight, many of the reasons we came up with for not using OOP in CS1 are seen to reflect our lack of understanding of the paradigm, our fear of the language, and our past experience teaching Pascal and the procedural paradigm. Furthermore, we believe that our reservations (which appear to be quite common) stemmed from a growing body of misleading OOP folklore that is contrary to our experience and that this paper attempts to dispel.},
  Crossref                 = {proceedings:sigcse:1994},
  Doi                      = {10.1145/191029.191054},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(full-text)}
}

@Article{Douce-etal:2005,
  Title                    = {Automatic test-based assessment of programming: A review},
  Author                   = {Douce, Christopher and Livingstone, David and Orwell, James},
  Year                     = {2005},

  Month                    = sep,
  Number                   = {3},
  Pages                    = {1--13},
  Volume                   = {5},

  Abstract                 = {Systems that automatically assess student programming assignments have been designed and used for over forty years. Systems that objectively test and mark student programming work were developed simultaneously with programming assessment in the computer science curriculum. This article reviews a number of influential automatic assessment systems, including descriptions of the earliest systems, and presents some of the most recent developments. The final sections explore a number of directions automated assessment systems may take, presenting current developments alongside a number of important emerging e-learning specifications.},
  Crossref                 = {journal:acm:jeric},
  Doi                      = {10.1145/1163405.1163409},
  Keywords                 = {Education, computer-based training, learning, programming assessment},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)},
  Timestamp                = {2013-10-24}
}

@InProceedings{Dvornik-etal:2011,
  Title                    = {Supporting introductory test-driven labs with {WebIDE}},
  Author                   = {Dvornik, Thomas and Janzen, David S. and Clements, John and Dekhtyar, Olga},
  Year                     = {2011},
  Pages                    = {51--60},

  Abstract                 = {WebIDE is a new web-based development environment for entry-level programmers with two primary goals: minimize tool barriers to writing computer programs and introduce software engineering best practices early in a student's educational career. Currently, WebIDE focuses on Test-Driven Learning (TDL) by using small iterative examples and introducing lock-step labs, which prevent the student from moving forward until they finish the current step. However, WebIDE does not require that labs follow TDL. Instructors can write their own labs for WebIDE using any software engineering or pedagogical approach. Likewise, instructors can build custom evaluators--written in any language--to support their approach and provide detailed error messages to students. We report on a pilot study in a CS0 course where students were split into two groups, one that used WebIDE and one that didn't. The WebIDE group showed a significant improvement in performance when writing a simple Android application. Additionally, among students with some programming experience, the WebIDE group was more proficient in writing unit tests.},
  Crossref                 = {proceedings:cseet:2011},
  Doi                      = {10.1109/CSEET.2011.5876137},
  Lang                     = {en},
  References               = {Janzen-Hossein:2006, Janzen-Saiedian:2008, Douce-etal:2005, Edwards:2003:jeric, Clements-etal:2010},
  Status                   = {found(backward-snowballing), selected(full-text) found(forward-snowballing), selected(abstract)},
  Timestamp                = {2013-10-13}
}

@InProceedings{Edwards:2003,
  Title                    = {Rethinking computer science education from a test-first perspective},
  Author                   = {Edwards, Stephen H.},
  Year                     = {2003},
  Note                     = {Educator's symposiums},
  Pages                    = {148--155},

  Abstract                 = {Despite our best efforts and intentions as educators, student programmers continue to struggle in acquiring comprehension and analysis skills. Students believe that once a program runs on sample data, it is correct; most programming errors are reported by the compiler; when a program misbehaves, shuffling statements and tweaking expressions to see what happens is the best debugging approach. This paper presents a new vision for computer science education centered around the use of test-driven development in all programming assignments, from the beginning of CS1. A key element to the strategy is comprehensive, automated evaluation of student work, in terms of correctness, the thoroughness and validity of the student's tests, and an automatic coding style assessment performed using industrial-strength tools. By systematically applying the strategy across the curriculum as part of a student's regular programming activities, and by providing rapid, concrete, useful feedback that students find valuable, it is possible to induce a cultural shift in how students behave.},
  Crossref                 = {proceedings:oopsla-companion:2003},
  Doi                      = {10.1145/949344.949390},
  Keywords                 = {CS1, extreme programming, laboratory-based teaching, pedagogy, test-driven development},
  Lang                     = {en},
  References               = {Buck-Stucki:2000, Decker-Hirshfield:1994, Goldwasser:2002, Isong:2001, Jackson-Usher:1997, Jones:2000, Mengel-etal:1999, Roberts:2000},
  Status                   = {found(backward-snowballing), selected(full-text)}
}

@Article{Edwards:2003:jeric,
  Title                    = {Improving Student Performance by Evaluating How Well Students Test Their Own Programs},
  Author                   = {Edwards, Stephen H.},
  Year                     = {2003},

  Month                    = sep,
  Number                   = {3},
  Volume                   = {3},

  Abstract                 = {Students need to learn more software testing skills. This paper presents an approach to teaching software testing in a way that will encourage students to practice testing skills in many classes and give them concrete feedback on their testing performance, without requiring a new course, any new faculty resources, or a significant number of lecture hours in each course where testing will be practiced. The strategy is to give students basic exposure to test-driven development, and then provide an automated tool that will assess student submissions on-demand and provide feedback for improvement. This approach has been demonstrated in an undergraduate programming languages course using a prototype tool. The results have been positive, with students expressing appreciation for the practical benefits of test-driven development on programming assignments. Experimental analysis of student programs shows a 28% reduction in defects per thousand lines of code.},
  Crossref                 = {journal:acm:jeric},
  Doi                      = {10.1145/1029994.1029995},
  Keywords                 = {agile methods, extreme programming, teaching software testing, test-driven development, test-first coding},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Edwards:2004,
  Title                    = {Using software testing to move students from trial-and-error to reflection-in-action},
  Author                   = {Edwards, Stephen H.},
  Year                     = {2004},
  Pages                    = {26--30},

  Abstract                 = {Introductory computer science students rely on a trial and error approach to fixing errors and debugging for too long. Moving to a reflection in action strategy can help students become more successful. Traditional programming assignments are usually assessed in a way that ignores the skills needed for reflection in action, but software testing promotes the hypothesis-forming and experimental validation that are central to this mode of learning. By changing the way assignments are assessed--where students are responsible for demonstrating correctness through testing, and then assessed on how well they achieve this goal--it is possible to reinforce desired skills. Automated feedback can also play a valuable role in encouraging students while also showing them where they can improve.},
  Crossref                 = {proceedings:sigcse:2004},
  Doi                      = {10.1145/971300.971312},
  Keywords                 = {CS1, automated grading, extreme programming, pedagogy, test-driven development},
  Lang                     = {en},
  References               = {Buck-Stucki:2000, Buck-Stucki:2001, Comer-Roggio:2002, Decker-Hirshfield:1994, Edwards:2003},
  Status                   = {found(backward-snowballing), selected(full-text)}
}

@InProceedings{Edwards-PerezQuinones:2008,
  Title                    = {{Web-CAT}: Automatically Grading Programming Assignments},
  Author                   = {Edwards, Stephen H. and Perez-Quinones, Manuel A.},
  Year                     = {2008},
  Pages                    = {328--328},

  Abstract                 = {This demonstration introduces participants to using Web-CAT, an open-source automated grading system. Web-CAT is customizable and extensible, allowing it to support a wide variety of programming languages and assessment strategies. Web-CAT is most well-known as the system that "grades students on how well they test their own code," with experimental evidence that it offers greater learning benefits than more traditional output-comparison grading. Participants will learn how to set up courses, prepare reference tests, set up assignments, and allow graders to manually grade for design.},
  Crossref                 = {proceedings:iticse:2008},
  Doi                      = {10.1145/1384271.1384371},
  Keywords                 = {assessment, automated grading, evaluation, feedback, manual grading, marking, programming assignment},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{English-Siviter:2000,
  Title                    = {Experience with an Automatically Assessed Course},
  Author                   = {English, John and Siviter, Phil},
  Booktitle                = {AAA},
  Year                     = {2000},
  Pages                    = {168--171},

  Abstract                 = {This paper describes our experiences of developing and running an introductory module for first year Computing undergraduates. The 'Supporting Technologies' module is intended to equip students with basic computing skills that they will need for the rest of their course. A novel feature of the work discussed here is that several different automated assessment tools and techniques are integrated into a common framework sharing a common results database. This allows a wide range of different assessment formats within the same module framework.},
  Crossref                 = {proceedings:iticse:2000},
  Doi                      = {10.1145/343048.343161},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Ferradin-Stephani:2005,
  Title                    = {A tool to teach programming using {Internet}},
  Author                   = {Ferrandin, M. and Stephani, S. L.},
  Year                     = {2005},
  Pages                    = {1--8},

  Abstract                 = {This paper relates a development process of one tool for teaching/learning to program through the Web (World Wide Web), the WEB-UNERJOL, developed in a research project at Centro Universitário de Jaraguá do Sul - UNERJ. This tool has the main objective to be used as support tool for teachers and students in the process of teaching programming techniques, using Portugol as base language.},
  Abstract-orig            = {Neste artigo objetivamos falar sobre o desenvolvimento de uma ferramenta para o ensino de programação através da Web (World Wide Web), o WEB-UNERJOL, desenvolvida em um projeto de pesquisa no Centro Universitário de Jaraguá do Sul - UNERJ. Esta ferramenta tem como principal objetivo ser utilizada como ferramenta de apoio aos professores no ensino de técnicas de programação usando a linguagem Portugol como base.},
  Crossref                 = {proceedings:sulcomp:2005},
  Keywords                 = {programming teaching, algorithms, Portugol},
  Keywords-orig            = {Ensino de programação, Algoritmos, Portugol},
  Lang                     = {pt},
  Owner                    = {mariane},
  Status                   = {found(backward-snowballing), selected(abstract)},
  Timestamp                = {2013.09.26},
  Title-orig               = {Ferramenta para o ensino de programação via {Internet}},
  Url                      = {http://periodicos.unesc.net/index.php/sulcomp/article/view/794/745}
}

@Article{Franca-etal:2013,
  Title                    = {System to support laboratory activities of programming via Moodle with support for load balancing and similarity analysis code},
  Author                   = {Franca, A. B. and Maciel, D. L. and Soares, J. M.},
  Year                     = {2013},

  Month                    = jul,
  Number                   = {1},
  Pages                    = {92--105},
  Volume                   = {21},

  Abstract                 = {Aiming to instrumentalize the teacher to make a better monitoring of large classrooms of programming disciplines, this work presents an environment that integrates and adapts Web tools to evaluate programs implemented by students, as well as making inferences about the similarity between the codes developed. With this system, students can submit and validate their solutions and, in addition, teachers can execute preprocessing and matching algorithms to support analysis of similarity between these solutions. All operations are performed through the interface of the Moodle environment. Whereas the compilation and concurrent execution of large number of programs may require high availability of computational resources, the developed environment supports load balancing.},
  Abstract-orig            = {Visando instrumentalizar o professor para o melhor acompanhamento de turmas numerosas de disciplinas de programação, este trabalho apresenta um ambiente que integra e adapta ferramentas Web para avaliar os programas implementados por alunos, bem como fazer inferências sobre a similaridade entre os códigos desenvolvidos. Com este sistema, alunos submetem e validam suas soluções e, adicionalmente, professores podem executar algoritmos de pré-processamento e comparação para dar suporte à análise de similaridade entre essas soluções. Todas as operações são realizadas por meio da interface do ambiente Moodle. Considerando que a compilação e execução concorrente de grande quantidade de programas podem exigir alta disponibilidade de recursos computacionais, o ambiente desenvolvido oferece suporte ao balanceamento de carga.},
  Crossref                 = {journal:bjocie:sbc},
  Keywords                 = {Similarity analysis, plagiarism detection, virtual laboratory, automatic assessment of source code},
  Lang                     = {pt},
  Owner                    = {mariane},
  References               = {Franca-Soares:2011},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.10.04},
  Title-orig               = {Sistema de apoio a atividades de laboratório de programação via Moodle com suporte ao balanceamento de carga e análise de similaridade de código}
}

@InProceedings{Franca-Soares:2011,
  Title                    = {Support system for programming laboratory activities using {Moodle} with support of load balancing},
  Author                   = {França, A. B. and Soares, J. M.},
  Year                     = {2011},
  Pages                    = {710--719},

  Abstract                 = {To contribute to the conditions of teaching and learning computer programming, this paper presents an environment that integrates Moodle with a web-based tool used to support programming competitions. The tool allows the registration of the result of the compilation and implementation of the proposed problems in C, Cpp and Java, tracking the student’s submissions, and allows the evaluation of the teacher by the Moodle interface. Whereas the compilation and execution on a shared remote server may require many computational resources, the environment developed to support load balancing.},
  Abstract-orig            = {Visando contribuir com as condições de ensino e aprendizagem em laboratórios de disciplinas de programação, este trabalho apresenta um ambiente que integra o Moodle a uma ferramenta Web utilizada no apoio a competições de programação. A ferramenta permite o registro do resultado da compilação e da execução de problemas propostos nas linguagens C, C++ e Java, rastreando as submissões dos alunos, e possibilita a avaliação do professor via interface do Moodle. Considerando que a compilação e execução de programas em um servidor remoto compartilhado pode requerer muitos recursos computacionais, o ambiente desenvolvido oferece suporte ao balanceamento de carga.},
  Crossref                 = {proceedings:sbie:2011},
  Lang                     = {pt},
  Owner                    = {mariane},
  References               = {software:moodle, Campos-Ferreira:2004, Kurnia-etal:2001},
  Status                   = {found(backward-snowballing), selected(full-text)},
  Timestamp                = {2013.09.26},
  Title-orig               = {Sistema de apoio a atividades de laboratório de programação via {Moodle} com suporte ao balanceamento de carga},
  Url                      = {http://ceie-sbc.educacao.ws/pub/index.php/sbie/article/view/1633/1398}
}

@Article{Funabiki-etal:2013,
  Title                    = {A Java Programming Learning Assistant System Using Test-Driven Development Method},
  Author                   = {Funabiki, Nobuo and Matsushima, Yukiko and Nakanishi, Toru and Watanabe, Kan and Amano, Noriki},
  Journal                  = {IAENG International Journal of Computer Science},
  Year                     = {2013},

  Month                    = feb,
  Number                   = {1},
  Pages                    = {1--9},
  Volume                   = {40},

  Abstract                 = {Recently, the object-oriented programming language Java has been used in many practical systems including enterprise servers, smart phones, and embedded systems, due to its high safety and portability. Thus, a lot of educational institutes have offered Java programming courses to foster Java engineers. In this paper, we propose a Web-based Java Programming Learning Assistant System (JPLAS) using the test-driven development (TDD) method, to enhance educational effects of Java programming by assisting self-studies of students who have studied the basic Java grammar while reducing teacher loads. In JPLAS, a teacher first registers a Java programming assignment with a statement, a model source code, and a test code. Then, a student writes a source code by reading the statement and the test code, such that the source code can be tested automatically at the server by using JUnit, a tool for the TDD method. We confirm the effectiveness of JPLAS through experimental applications to students in our department.},
  Crossref                 = {journal:iaeng:2013},
  Keywords                 = {Web system, programming language, Java, test-driven development method, JUnit, code reading},
  Lang                     = {en},
  Owner                    = {mariane},
  References               = {Janzen-Saiedian:2008},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.10.07}
}

@InProceedings{Gomes:2000,
  Title                    = {A support environment for teaching basic concepts of programming},
  Author                   = {Gomes, Anabela de Jesus and Mendes, A. J.},
  Year                     = {2000},
  Pages                    = {1--12},

  Abstract                 = {The overall failure observed on learning computer programming languages by undergraduation students, using conventional teaching methods, takes us to a reflection on the possible origins of this problems. This work presents a set of possible alternatives that can support the student in the learning process in this area. In order to do so, it is done, for each one of these alternatives, an analysis tha can distinguish themselves, showing advantages and disadvantages, as well as the context they can be applied to. The proposed approach consists in the creation of a hybrid automated tool, unitying several features observed in the alternatives discussed. However, before describing this approach, it is done a brief description of the state of the art of applications towards a similar goal. Finally, it is shown an incomplete and drafted description of the proposed approach, once it is still in the beginning of its development.},
  Abstract-orig            = {O insucesso generalizado verificado na aprendizagem das linguagens de programação, por parte de alunos do ensino superior, segundo os métodos de ensino tradicionais, leva a que seja feita uma reflexão sobre as suas possíveis origens. É apresentado, neste trabalho, um conjunto de eventuais alternativas que possam apoiar o aluno no seu processo de aprendizagem, nesta área. Para esse efeito, é efetuada para cada uma delas uma análise que as permite distinguir entre si, apresentando as suas vantagens e desvantagens, bem como o contexto em que se enquadram. A abordagem proposta consiste na criação de uma ferramenta híbrida automatizada, reunindo várias das características das alternativas apresentadas. Antes porém de a descrever é feita uma breve exposição sobre o estado da arte em aplicações com um propósito análogo. Finalmente, é apresentada uma descrição muito sumária e incompleta, do material proposto, uma vez que este se encontra no início do seu desenvolvimento.},
  Crossref                 = {proceedings:sides:1998},
  Lang                     = {pt},
  Owner                    = {mariane},
  Status                   = {found(backward-snowballing), selected(full-text)},
  Timestamp                = {2014.05.13},
  Title-orig               = {Ambiente de suporte à aprendizagem de conceitos básicos de programação}
}

@Article{Higgins-etal:2005,
  Title                    = {Automated Assessment and Experiences of Teaching Programming},
  Author                   = {Higgins, Colin A. and Gray, Geoffrey and Symeonidis, Pavlos and Tsintsifas, Athanasios},
  Year                     = {2005},

  Month                    = sep,
  Volume                   = {5},

  Abstract                 = {This article reports on the design, implementation, and usage of the CourseMarker (formerly known as CourseMaster) courseware Computer Based Assessment (CBA) system at the University of Nottingham. Students use CourseMarker to solve (programming) exercises and to submit their solutions. CourseMarker returns immediate results and feedback to the students. Educators author a variety of exercises that benefit the students while offering practical benefits. To date, both educators and students have been hampered by CBA software that has been constructed to assess text-based or multiple-choice answers only. Although there exist a few CBA systems with some capability to automatically assess programming coursework, none assess Java programs and none are as flexible, architecture-neutral, robust, or secure as the CourseMarker CBA system.},
  Crossref                 = {journal:acm:jeric},
  Doi                      = {10.1145/1163405.1163410},
  Keywords                 = {Computer-based assessment, formative and summative assessment, online assessment},
  Lan                      = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Hilton-Janzen:2012,
  Title                    = {On Teaching Arrays with Test-driven Learning in WebIDE},
  Author                   = {Hilton, Michael and Janzen, David S.},
  Booktitle                = {Proceedings of the 17th ACM Annual Conference on Innovation and Technology in Computer Science Education},
  Year                     = {2012},

  Address                  = {New York, NY, } # USA,
  Pages                    = {93--98},
  Publisher                = {ACM},
  Series                   = {ITiCSE '12},

  Abstract                 = {Test-driven development (TDD) has been shown to reduce defects and to lead to better code, but can it help beginning students learn basic programming topics, specifically arrays? We performed a controlled experiment where we taught arrays to two CS0 classes, one using WebIDE, an intelligent tutoring system that enforced the use of Test-Driven Learning (TDL) methods, and one using more traditional static methods and a development environment that instructed, but did not enforce the use of TDD. Students who used the TDL approach with WebIDE performed significantly better in assessments and had significantly higher opinions of their experiences than students who used traditional methods and tools.},
  Acmid                    = {2325322},
  Crossref                 = {proceedings:iticse:2012},
  Doi                      = {10.1145/2325296.2325322},
  ISBN                     = {978-1-4503-1246-2},
  Keywords                 = {CS0, CS1, computer science education, intelligent tutor},
  Lang                     = {en},
  Location                 = {Haifa, Israel},
  Numpages                 = {6},
  Owner                    = {mariane},
  References               = {Janzen-Saiedian:2008},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.10.15},
  Url                      = {http://doi.acm.org/10.1145/2325296.2325322}
}

@InProceedings{Goldwasser:2002,
  Title                    = {A Gimmick to Integrate Software Testing Throughout the Curriculum},
  Author                   = {Hilton, M. Goldwasser},
  Year                     = {2002},
  Pages                    = {271--275},

  Abstract                 = {We discuss our experiences in which students of a programming course were asked to submit both an implementation as well as a test set. A portion of a student's grade was then devoted both to the validity of a student's program on others' test sets, as well as how that student's test set performed in uncovering flaws in others' programs. The advantages are many, as this introduces implicit principles of software testing together with a bit of fun competition. The major complication is that such an all-pairs execution of tests grows quadratically with the number of participants, necessitating a fully automated scoring system.},
  Crossref                 = {proceedings:sigcse:2002},
  Doi                      = {10.1145/563340.563446},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)},
  Timestamp                = {2013-10-31}
}

@InProceedings{Hyvone-Malmi:1993,
  Title                    = {{TRAKLA}: A System for Teaching Algorithms Using email and a Graphical Editor},
  Author                   = {Hyvonen, Juha and Malmi, Lauri},
  Booktitle                = {Proceedings Conference on Computers and Hypermedia in Engineering Education},
  Year                     = {1993},
  Pages                    = {141--147},

  Abstract                 = {TRAKLA is an electronic mail (email) based system for teaching basic computer science data structures and algorithms. It distributes homework exercises and evaluates the students answers automatically. The exercises are individually tailored for each student so that copying the answers from others is not possible. The student receives exercises by email, solves the problems using an interactive editor, and sends the answers back using email. TRAKLA is used at Helsinki University of Technology (HUT) in the basic course of data structures and algorithms (CS&).},
  Crossref                 = {proceedings:cchee:1993},
  Lang                     = {en},
  Owner                    = {mariane},
  Status                   = {found(backward-snowballing), selected(full-text)},
  Timestamp                = {2014.05.23}
}

@Article{Isong:2001,
  Title                    = {Developing an automated program checkers},
  Author                   = {Isong, Julia},
  Year                     = {2001},

  Month                    = mar,
  Number                   = {3},
  Pages                    = {218--224},
  Volume                   = {16},

  Abstract                 = {This paper demonstrates the use of an automated program checker as a fast and effective technique for checking numerous programming assignments submitted by students. The process of designing and developing the checker is illustrated by a sample assignment. The paper concludes with a set of guidelines for preparing an assignment specification that is amenable to automated checking.},
  Crossref                 = {journal:acm:cfcsic},
  Lang                     = {en},
  References               = {Jackson-Usher:1997, Jones:2000, Reek:1989},
  Status                   = {found(backward-snowballing), selected(full-text)}
}

@InProceedings{Jackson:2000,
  Title                    = {A Semi-automated Approach to Online Assessment},
  Author                   = {Jackson, David},
  Year                     = {2000},
  Pages                    = {164--167},

  Abstract                 = {Desirable though fully automated assessment of student programming assignments is, it is an area that is beset by difficulties. While it is not contested that some aspects of assessment can be performed much more efficiently and accurately by computer, there are many others that still require human involvement. We have therefore designed a system that combines the strengths of the two approaches, the assessment software calling upon the skills of the human tutor where necessary to make sensible judgements. The technique has been used successfully on a systems programming course for several years, and student feedback has been supportive.},
  Crossref                 = {proceedings:iticse:2000},
  Doi                      = {10.1145/343048.343160},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Jackson-Usher:1997,
  Title                    = {Grading Student Programs Using {ASSYST}},
  Author                   = {Jackson, David and Usher, Michelle},
  Year                     = {1997},
  Pages                    = {335--339},

  Abstract                 = {The task of grading solutions to student programming exercises is laborious and error-prone. We have developed a software tool called ASSYST that is designed to relieve a tutor of much of the burden of assessing such programs. ASSYST offers a graphical interface that can be used to direct all aspects of the grading process, and it considers a wide range of criteria in its automatic assessment. Experience with the system has been encouraging.},
  Crossref                 = {proceedings:sigcse:1997},
  Doi                      = {10.1145/268084.268210},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(full-text)}
}

@InProceedings{Janzen-Saiedian:2008,
  Title                    = {Test-driven learning in early programming courses},
  Author                   = {Janzen, David and Saiedian, Hossein},
  Year                     = {2008},
  Pages                    = {532--536},

  Abstract                 = {Coercing new programmers to adopt disciplined development practices such as thorough unit testing is a challenging endeavor. Test-driven development (TDD) has been proposed as a solution to improve both software design and testing. Test-driven learning (TDL) has been proposed as a pedagogical approach for teaching TDD without imposing significant additional instruction time. This research evaluates the effects of students using a test-first (TDD) versus test-last approach in early programming courses, and considers the use of TDL on a limited basis in CS1 and CS2. Software testing, programmer productivity, programmer performance, and programmer opinions are compared between test-first and test-last programming groups. Results from this research indicate that a test-first approach can increase student testing and programmer performance, but that early programmers are very reluctant to adopt a test-first approach, even after having positive experiences using TDD. Further, this research demonstrates that TDL can be applied in CS1/2, but suggests that a more pervasive implementation of TDL may be necessary to motivate and establish disciplined testing practice among early programmers.},
  Crossref                 = {proceedings:sigcse:2008},
  Doi                      = {10.1145/1352135.1352315},
  Keywords                 = {cs1, pedagogy, test-driven development, test-driven learning},
  Lang                     = {en},
  References               = {Spacco-etal:2006:iticse},
  Status                   = {found(backward-snowballing), selected(full-text)},
  Timestamp                = {2013-10-24}
}

@InProceedings{Janzen-etal:2013,
  Title                    = {An Evaluation of Interactive Test-driven Labs with {WebIDE} in {CS0}},
  Author                   = {Janzen, David S. and Clements, John and Hilton, Michael},
  Booktitle                = {Proceedings of the 2013 International Conference on Software Engineering},
  Year                     = {2013},

  Address                  = {Piscataway, NJ, } # USA,
  Pages                    = {1090--1098},
  Publisher                = {IEEE Press},
  Series                   = {ICSE '13},

  Abstract                 = {WebIDE is a framework that enables instructors to develop and deliver online lab content with interactive feedback. The ability to create lock-step labs enables the instructor to guide students through learning experiences, demonstrating mastery as they proceed. Feedback is provided through automated evaluators that vary from simple regular expression evaluation to syntactic parsers to applications that compile and run programs and unit tests. This paper describes WebIDE and its use in a CS0 course that taught introductory Java and Android programming using a test-driven learning approach. We report results from a controlled experiment that compared the use of dynamic WebIDE labs with more traditional static programming labs. Despite weaker performance on pre-study assessments, students who used WebIDE performed two to twelve percent better on all assessments than the students who used traditional labs. In addition, WebIDE students were consistently more positive about their experience in CS0.},
  Acmid                    = {2486938},
  Crossref                 = {proceedings:icse:2013},
  ISBN                     = {978-1-4673-3076-3},
  Lang                     = {en},
  Location                 = {San Francisco, CA, USA},
  Numpages                 = {9},
  Owner                    = {mariane},
  References               = {Dvornik-etal:2011, Janzen-Saiedian:2008},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.10.04},
  Url                      = {http://dl.acm.org/citation.cfm?id=2486788.2486938}
}

@InProceedings{Janzen-Hossein:2006,
  Title                    = {Test-driven learning: intrinsic integration of testing into the {CS/SE} curriculum},
  Author                   = {Janzen, David S. and Saiedian, Hossein},
  Year                     = {2006},
  Pages                    = {254--258},

  Abstract                 = {Test-driven learning (TDL) is an approach to teaching computer programming that involves introducing and exploring new concepts through automated unit tests. TDL offers the potential of teaching testing for free, of improving programmer comprehension and ability, and of improving software quality both in terms of design quality and reduced defect density.This paper introduces test-driven learning as a pedagogical tool. It will provide examples of how TDL can be incorporated at multiple levels in computer science and software engineering curriculum for beginning through professional programmers. In addition, the relationships between TDL and test-driven development will be explored.Initial evidence indicates that TDL can improve student comprehension of new concepts while improving their testing skills with no additional instruction time. In addition, by learning to construct programs in a test-driven manner, students are expected to be more likely to develop their own code with a test-driven approach, likely resulting in improved software designs and quality.},
  Crossref                 = {proceedings:sigcse:2006},
  Doi                      = {10.1145/1121341.1121419},
  Keywords                 = {CS1, extreme programming, pedagogy, test-driven development, test-driven learning},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)},
  Timestamp                = {2013-10-24}
}

@Article{Jones:2000,
  Title                    = {Grading student programs -- a software testing approach},
  Author                   = {Jones, Edward L.},
  Year                     = {2000},

  Month                    = oct,
  Number                   = {2},
  Pages                    = {185--192},
  Volume                   = {16},

  Abstract                 = {This paper describes an experience of automating the grading of student programs. A testing framework provides guidance for developing the assignment specification and the grading program. Automation saves time and improves grading consistency and feedback to students. After an adjustment period, student programs improved. Although the instructor invests more time writing a testable assignment specification and developing the grading program, these costs are expected to be amortized over multiple courses and assignments.},
  Crossref                 = {journal:acm:cfcsic},
  Lang                     = {en},
  References               = {Churcher-etal:1998, Reek:1989, Arnow:1995, Jackson-Usher:1997},
  Status                   = {found(backward-snowballing), selected(full-text)},
  Timestamp                = {2013-10-31}
}

@InProceedings{Korhonen-Malmi:2000,
  Title                    = {Algorithm Simulation with Automatic Assessment},
  Author                   = {Korhonen, Ari and Malmi, Lauri},
  Year                     = {2000},
  Pages                    = {160--163},

  Abstract                 = {Visualization is a useful aid for understanding the working of algorithms. Therefore many interactive algorithm animation tools have been developed. However, students may misinterpret the visualization and therefore the correctness of their interpretation should be confirmed by tests supplemented with feedback.In this paper, a learning environment for data structures and algorithms is presented. The combination of algorithm animation and simulation with automatic assessment provides a way to give meaningful feedback to the students. Our experience shows that this combination is of great value for the students studying algorithms.},
  Crossref                 = {proceedings:iticse:2000},
  Doi                      = {10.1145/343048.343157},
  Lang                     = {en},
  References               = {Korhonen-1997, Hyvone-Malmi:1993},
  Status                   = {found(backward-snowballing), selected(full-text)}
}

@Article{Kurnia-etal:2001,
  Title                    = {Online Judge},
  Author                   = {Kurnia, A. and Andrew, Lim and Brenda, Cheang},
  Year                     = {2001},

  Month                    = may,
  Number                   = {4},
  Pages                    = {299--315},
  Volume                   = {36},

  Abstract                 = {This report describes and evaluates the implementation and applicability of an automatic programming assignment grading system we named the online judge. We compared this with the manual grading system that is currently being used and showed that the automatic grading system, when implemented carefully, is more convenient, fairer, and more secure than the former. We have successfully tested the system on two courses. However, further studies need to be conducted to improve the effectiveness of learning through this system.},
  Crossref                 = {journal:elsevier:ce},
  Doi                      = {10.1016/S0360-1315(01)00018-5},
  Keywords                 = {automatic grading system, online judge, programming assignments},
  Lang                     = {en},
  Owner                    = {mariane},
  Status                   = {found(backward-snowballing), selected(full-text)},
  Timestamp                = {2013.10.07}
}

@InProceedings{Lahtinen-etal:2005,
  Title                    = {A study of the difficulties of novice programmers},
  Author                   = {Lahtinen, Essi and Ala-Mutka, Kirsti and Järvinen, Hannu-Matti},
  Year                     = {2005},
  Pages                    = {14--18},

  Abstract                 = {Programming is related to several fields of technology, and many university students are studying the basics of it. Unfortunately, they often face difficulties already on the basic courses. This work studies the difficulties in learning programming in order to support developing learning materials for basic programming courses. The difficulties have to be recognized to be able to aid learning and teaching in an effective way.An international survey of opinions was organized for more than 500 students and teachers. This paper analyses the results of the survey. The survey provides information of the difficulties experienced and perceived when learning and teaching programming. The survey results also provide basis for recommendations for developing learning materials and approaches.},
  Crossref                 = {proceedings:iticse:2005},
  Doi                      = {10.1145/1067445.1067453},
  Keywords                 = {Programming, learning, teaching, difficulties, novices},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)},
  Timestamp                = {2013-10-13}
}

@InProceedings{Lappalainen-etal:2010,
  Title                    = {{ComTest}: a tool to impart {TDD} and unit testing to introductory level programming},
  Author                   = {Lappalainen, Vesa and Itkonen, Jonne and Isomöttönen, Ville and Kollanus, Sami},
  Year                     = {2010},
  Pages                    = {63--67},

  Abstract                 = {Research has noticed that imparting TDD-like testing to an early computing curriculum is challenging because it increases technical and cognitive load for the students. This paper addresses the challenge with a software-based solution constructed to facilitate the process of writing tests. The solution allows using a compact while efficient syntax for formulating tests, writing tests into JavaDoc comments, thus close to the source code that implements intended functionalities, and automates the generation of actual test code. The constructed solution -- the ComTest tool -- has now been used in four introductory level programming course offerings. The paper presents the tool and concludes with initial lessons learned.},
  Crossref                 = {proceedings:iticse:2010},
  Doi                      = {10.1145/1822090.1822110},
  Keywords                 = {TDD, education, tools, unit testing},
  Lang                     = {en},
  Status                   = {found(suggestion), excluded(not automatic assessment)}
}

@InProceedings{Menezes-etal:2008,
  Title                    = {Computer supported co-operative systems to support the problem solving - a case study of learning computer programming},
  Author                   = {Menezes, Crediné Silva de and Tavares, Orivaldo Lira and Nevado, Rosane Aragón and Cury, Davidson},
  Year                     = {2008},
  Pages                    = {5--10},

  Abstract                 = {Nowadays it is widely accepted that the teaching of computer science and engineering reaches better results when it focuses on problem solving. However, the adoption of this pedagogical approach is often hampered by the limitations of the learning environment in a typical classroom. In this work, we present a pedagogic proposal supported by a digital environment to power and to facilitate the cooperative authoring.},
  Crossref                 = {proceedings:fie:2008},
  Doi                      = {10.1109/FIE.2008.4720665},
  Keywords                 = {roblem solving, learning of computer programming, digital environment, cooperative authoring, CSCL},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Mengel-etal:1999,
  Title                    = {A case study of the static analysis of the quality of novice student programs},
  Author                   = {Mengel, Susan A. and Yerramilli, Vinay},
  Year                     = {1999},
  Pages                    = {78--82},

  Abstract                 = {Helping students to understand the quality of their programs is a difficult task hampered by the time instructors have for grading. When the number of programs to grade are in the hundreds, instructors may be able to handle dynamic analysis of the programs and possibly a cursory glance at the code itself. Automated solutions may appear attractive, but few exist in the literature. Further, not enough examples exist to help instructors choose what metrics would be useful for helping students to visualize how they program. In this study, a collection of static metrics data obtained with Verilog Logiscope is correlated to an estimate of program quality to determine which metrics would show students at least the instructor's idea of quality. The study results are encouraging and show that definite correlations exist so that static analysis is a viable methodology for assessing student work. Further work is considered to help to confirm the study's results and their practical application.},
  Crossref                 = {proceedings:sigcse:1999},
  Doi                      = {10.1145/299649.299689},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Moreira-Favero:2009,
  Title                    = {An environment for teaching programming with automatic feedback of exercises},
  Author                   = {Moreira, Mireille Pinheiro and Favero, E. L.},
  Year                     = {2009},
  Pages                    = {429--438},

  Abstract                 = {The teaching-and-learning process of algorithms and computer programming still has a large number of difficulties. Learning Environments (LE) have been proposed to solve that challenge. One proposal is to use the LE’s to solve the problem of following each student’s step in the process of constructing algorithms. This paper presents a study about techniques of algorithms auto-marking that allows immediately feedback to the student, helping the teacher in correction and grading of programming exercises, in the context of a virtual learning environment or in laboratory classes.},
  Abstract-orig            = {O processo de ensino-aprendizagem de algoritmos e programação de computadores ainda apresenta um grande desafio. Ambientes virtuais (AV) de ensino têm sido propostos com algumas soluções para este desafio. Uma proposta é utilizar os AV para solucionar o problema do acompanhamento e correção de cada solução dos estudantes no processo de resolução de problemas de algoritmos. Este artigo apresenta um estudo sobre técnicas de avaliação automática de algoritmos que possibilitam um retorno imediato ao estudante auxiliando o professor na correção e avaliação de exercícios de programação, no contexto de um ambiente virtual ou em aulas práticas de laboratório.},
  Crossref                 = {proceedings:wei:2009},
  Lang                     = {pt},
  Owner                    = {mariane},
  References               = {Douce-etal:2005, Higgins-etal:2005, Mota-etal:2008, Gomes:2000, Almeida-etal:2002, Tobar-etal:2001, Saikkonen-etal:2001},
  Status                   = {found(backward-snowballing), selected(full-text)},
  Timestamp                = {2013.09.26},
  Title-orig               = {Um Ambiente para Ensino de Programação com Feedback Automático de Exercícios},
  Url                      = {http://csbc2009.inf.ufrgs.br/anais/pdf/wei/st01_02.pdf}
}

@InProceedings{Mota-etal:2009,
  Title                    = {{Moodle}-integrated environment to support the development of initial programming skill},
  Author                   = {Mota, M. P. and Brito, S. R. and Moreira, M. P. and Favero, E. L.},
  Year                     = {2009},
  Pages                    = {1--10},

  Abstract                 = {The development of skills in computer programming requires significant effort from students makes solutions for problems proposed. This paper presents an exercise, simulation and evaluation environment to support the teaching-learning process in programming and algorithm courses. The integration of the environment to the Moodle platform increases its using benefits. The main advantages of environment are resulting from program viewer using, which contributes to the understanding of programs abstractions and the fast feedback provided by automatic evaluator. Furthermore, there is a decrement of teacher’s overloading which allows the practice of new teaching strategies.},
  Abstract-orig            = {O desenvolvimento de habilidades em programação de computadores exige um esforço significativo dos estudantes para construir soluções aos problemas propostos. Esse artigo apresenta um ambiente de exercício, simulação e avaliação para apoiar o processo ensino-aprendizagem em cursos de algoritmos e programação. A integração do ambiente à plataforma Moodle potencializa os benefícios de sua utilização. As principais vantagens do ambiente são advindas do uso do visualizador de programas, que contribui para a compreensão das abstrações dos programas e o rápido feedback fornecido pelo avaliador automático. Além disso, há diminuição da sobrecarga do professor permitindo a prática de novas estratégias de ensino.},
  Crossref                 = {proceedings:sbie:2009},
  Lang                     = {pt},
  References               = {software:moodle, Mota-etal:2008, Moreira-Favero:2009},
  Status                   = {found(backward-snowballing), selected(full-text) found(forward-snowballing), selected(full-text)},
  Timestamp                = {2013-12-11},
  Title-orig               = {Ambiente Integrado à Plataforma Moodle para Apoio ao Desenvolvimento das Habilidades Iniciais de Programação}
}

@InProceedings{Mota-etal:2008,
  Title                    = {{JavaTool}: a tool to teach programming},
  Author                   = {Mota, M. P. and Pereira, L. W. K. and Favero, E. L.},
  Year                     = {2008},
  Pages                    = {1--10},

  Abstract                 = {This paper describes a tool called JavaTool, whose objective is to facilitate the programming learning in introductory disciplines of computer science courses. The proposal is based on the development of an interpreter for Java language, to make the animation and the de tailed visualization of information about the code and its execution possible. The main goal is to allow the students to have a better performance in programming disciplines.},
  Abstract-orig            = {Este artigo apresenta a ferramenta JavaTool, cujo objetivo é facilitar a aprendizagem de programação, utilizando Java como linguagem de ensino em disciplinas introdutórias do curso de computação. A proposta baseia-se no desenvolvimento de um interpretador para a linguagem Java, de forma a possibilitar a animação e visualização detalhada de informações do código e de sua execução. A meta final é permitir aos estudantes obter um melhor rendimento nessas disciplinas de programação.},
  Crossref                 = {proceedings:wei:2008},
  Lang                     = {pt},
  Owner                    = {mariane},
  Status                   = {found(backward-snowballing), excluded(not automatic assessment)},
  Timestamp                = {2013.09.26},
  Title-orig               = {{JavaTool}: Uma Ferramenta Para Ensino de Programação},
  Url                      = {http://www.labead.ufpa.br/javatool/artigoWEI2008_Marcelle.pdf}
}

@InProceedings{Novak-Binas:2011,
  Title                    = {Automated Testing of Case Studies in Programming Courses},
  Author                   = {Novák, M. and Binas, M.},
  Year                     = {2011},
  Pages                    = {157--162},

  __markedentry            = {[mariane:]},
  Abstract                 = {The majority of Learning management systems (LMS) provide the functionality only for evaluation of built-in tests activities without any support for evaluation of case studies, which are frequently used in programming courses. These have to be checked manually by an instructor, what is time consuming especially in case if courses are attended with a high number of students. In this paper we propose an automated submission process decomposed in several phases. We provide a detailed description of particular phases with selected tools as jPlag and PMD. The aim of our work is to combine existing tools into one coherent system connected with LMS (Moodle) and IDEs and not to go a way of implementing a new standalone validation and assignment system. We present also some partial results and experiences using jPlag and PMD tools on our courses – Programming, Object oriented programming and Technologies Java.},
  Crossref                 = {proceedings:iceta:2011},
  Doi                      = {10.1109/ICETA.2011.6112606},
  Lang                     = {en},
  Owner                    = {mariane},
  References               = {Souza-etal:2011:cseet},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.10.04}
}

@Article{Reek:1989,
  Title                    = {The {TRY} System -or- How to Avoid Testing Student Programs},
  Author                   = {Reek, Kenneth A.},
  Year                     = {1989},

  Month                    = feb,
  Number                   = {1},
  Pages                    = {112--116},
  Volume                   = {21},

  Abstract                 = {This paper discusses TRY, a software package for the UNIX operating system that tests student programs. The motivation for developing the system is established by describing problems associated with traditional grading methods and electronic program submission. The design and use of the TRY system is discussed, along with the advantages it provides to both the student and the instructor.},
  Crossref                 = {journal:acm:sigcse-bulletin},
  Doi                      = {10.1145/65294.71198},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Reek:1996,
  Title                    = {A Software Infrastructure to Support Introductory Computer Science Courses},
  Author                   = {Reek, Kenneth A.},
  Year                     = {1996},
  Pages                    = {125--129},

  Abstract                 = {This paper describes the software developed to support the first two years of the Computer Science curriculum at the Rochester Institute of Technology. The system supports student retrieval of files and data; on-line submission with immediate, automated testing and archiving of student work; and assists in grading the work and the associated record keeping.},
  Crossref                 = {proceedings:sigcse:1996},
  Doi                      = {10.1145/236452.236524},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Roberts:2000,
  Title                    = {Strategies for encouraging individual achievement in introductory computer science courses},
  Author                   = {Roberts, Eric},
  Year                     = {2000},
  Pages                    = {295--299},

  Abstract                 = {Students in introductory computer science courses often vary widely in background and ability. As a result, some students are bored by the pace of presentation, while others struggle to keep up. This paper describes our experience using open-ended assignments and programming contests to capture the interest of our strongest students without adversely affecting the educational experience for the other students in the class. This approach has been markedly successful, particularly for highly motivated students, who are often able to work well beyond the level of the class. The paper also includes a survey of student reactions to the various extra-credit opportunities, which indicates that many student value this component of the class even if they do not participate directly in these activities.},
  Crossref                 = {proceedings:sigcse:2000},
  Doi                      = {10.1145/330908.331873},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), excluded(not automatic assessment)}
}

@InProceedings{Saikkonen-etal:2001,
  Title                    = {Fully Automatic Assessment of Programming Exercises},
  Author                   = {Saikkonen, Riku and Malmi, Lauri and Korhonen, Ari},
  Year                     = {2001},
  Pages                    = {133--136},

  Abstract                 = {Automatic assessment of programming exercises has become an important method for grading students' exercises and giving feedback for them in mass courses. We describe a system called Scheme-robo, which has been designed for assessing programming exercises written in the functional programming language Scheme. The system assesses individual procedures instead of complete programs. In addition to checking the correctness of students' solutions the system provides many different tools for analysing other things in the program like its structure and running time, and possible plagiarism. The system has been in production use on our introductory programming course with some 300 students for two years with good results.},
  Crossref                 = {proceedings:iticse:2001},
  Doi                      = {10.1145/377435.377666},
  Lang                     = {en},
  References               = {Korhonen-Malmi:2000, Jackson:2000, English-Siviter:2000, Benford-etal:1993},
  Status                   = {found(backward-snowballing), selected(full-text)}
}

@InProceedings{Santos-Rissoli:2011,
  Title                    = {Benefits on use a intelligent assistant to education learning in computer programming},
  Author                   = {Santos, G. Almeida and Rissoli, V. R. V.},
  Booktitle                = {XVII Workshop of Computing in Education},
  Year                     = {2011},
  Month                    = nov,

  Abstract                 = {This paper presents the results achieved with the use of an Intelligent Teaching Assistant (ITA). This assistant incorporates Cognitive Learning Theory concepts, providing a more realistic cognitive situation of each student. The results obtained using this assistant on graduation teaching environment demonstrate its feasibility for improving the teaching and learning of computer programming.},
  Abstract-orig            = {Este artigo apresenta os resultados alcançados com o uso de um Assistente Virtual de Ensino Inteligente (ITA) no apoio ao ensino de programação de computadores. Tal assistente incorpora o conceito da Teoria da Aprendizagem Significativa, provendo um acompanhamento mais realista da situação cognitiva de cada aluno. Os resultados obtidos com a utilização desse assistente em um ambiente de ensino superior demonstram a viabilidade do mesmo para a melhoria do processo de ensino-aprendizagem.},
  Crossref                 = {proceedings:sbie:2011},
  Lang                     = {pt},
  Owner                    = {mariane},
  References               = {Mota-etal:2009},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.10.04},
  Title-orig               = {Benefícios no Uso de um Assistente Inteligente no Ensino-Aprendizagem de Programação Computacional}
}

@InProceedings{Sirotheau-etal:2011,
  Title                    = {Beginners learning of algorithm and programming: focus on self-evaluation competences},
  Author                   = {Sirotheau, S. and Brito, S. R. and Silva, A. S. and Eliasquevici, M. K. and Favero, E. L. and Tavares, O. L.},
  Year                     = {2011},
  Pages                    = {750--759},

  Abstract                 = {This article demonstrates the incorporation in JavaTool, already in use and integrated into the Moodle platform, features that enable the exercise of the feedback from students as a way to stimulate the development of evaluation skills. Research has been carried out in order to demonstrate the skills of self-assessment focusing efforts on the proposed collaborative feedback subsystem. This article brings an important contribution to the discussion of automatic evaluation not only as an assessment tool, in order to reduce the workload of the teacher, but as a component that supports the processes of self-regulation of learning.},
  Abstract-orig            = {Este artigo demonstra a incorporação no JavaTool, já em uso e integrado à plataforma Moodle, recursos que possibilitem o exercício do feedback entre estudantes, como forma de estimular o desenvolvimento de habilidades de avaliação. Pesquisas têm sido realizadas com o intuito demostrar a competências de autoavaliação concentrando-se esforços na proposta do subsistema de feedback colaborativo. Este artigo traz uma contribuição importante na discussão da avaliação automática não apenas como um instrumento de avaliação, com a finalidade de reduzir a sobrecarga do professor, mas como um componente que apóia os processos de autorregulação da aprendizagem.},
  Crossref                 = {proceedings:sbie:2011},
  Lang                     = {pt},
  Owner                    = {mariane},
  References               = {Brito-etal:2011, Menezes-etal:2008, Moreira-Favero:2009, Mota-etal:2008, Mota-etal:2009, software:moodle},
  Status                   = {found(backward-snowballing), selected(full-text) found(forward-snowballing), selected(full-text)},
  Timestamp                = {2013.09.30},
  Title-orig               = {Aprendizagem de iniciantes em algoritmos e programação: foco nas competências de autoavaliação}
}

@InProceedings{Souza-etal:2011,
  Title                    = {{ProgTest}: automatic support for integrated teaching of programming and software testing},
  Author                   = {Souza, Draylson and Maldonado, José and Barbosa, Ellen Francine},
  Year                     = {2011},
  Pages                    = {1893--1897},

  Abstract                 = {Within the diverse initiatives investigated to reduce the problems associated with learning of programming, the introduction of software testing concepts of introductory courses on Computing Sciences should be highlighted. In this scenario, tool capable of providing proper feedback regarding the performance of students are fundamental. In this work, it is shown PROGTEST -- a Web tool to support the submission and automatic evaluation of programming assigments based upon software testing activities.},
  Abstract-orig            = {Dentre as várias iniciativas investigadas a fim de amenizar os problemas associados ao ensino de programação destaca-se a introdução de conceitos de teste em disciplinas introdutórias dos cursos de Computação. Nesse cenáario, ferramentas capazes de fornecer feedback adequado sobre o desempenho dos alunos tornam-se fundamentais. Neste trabalho, é apresentada a PROGTEST -- uma ferramenta web de apoio à submissão e avaliação automática de trabalhos de programação baseada em atividades de teste.},
  Crossref                 = {proceedings:applets:2011},
  Lang                     = {pt},
  References               = {Edwards-PerezQuinones:2008, Souza-etal:2011:cseet, Spacco-etal:2006:oopsla},
  Status                   = {found(backward-snowballing), selected(full-text)},
  Timestamp                = {2013-10-13},
  Title-orig               = {{ProgTest}: Apoio Automatizado ao Ensino Integrado de Programação e Teste de Software}
}

@InProceedings{Souza-etal:2011:cseet,
  Title                    = {{ProgTest}: An environment for the submission and evaluation of programming assignments based on testing activities},
  Author                   = {Souza, Draylson Micael de and Maldonado, Jose Carlos and Barbosa, Ellen Francine},
  Year                     = {2011},
  Pages                    = {1--10},

  Abstract                 = {Programming foundations is not an easy subject to be taught--many students have difficulties understanding the abstract concepts of programming and have a wrong view about the programming activity. In order to address these problems, experiences have suggested the integrated teaching of programming concepts and software testing in introductory CS courses. Shortly, the idea is that testing can contribute to enhance the students' capabilities of understanding and analysis. However, such perspective requires tools to provide an adequate feedback to evaluate the students' performance concerning programming and testing activities. In this paper we describe ProgTest--a web-based tool for the submission and automatic evaluation of practical programming assignments based on testing activities. Results from a preliminary validation of ProgTest are also presented. Such results provide evidences on the practical use of ProgTest as a supporting mechanism for the integrated teaching of programming foundations and software testing.},
  Crossref                 = {proceedings:cseet:2011},
  Doi                      = {10.1109/CSEET.2011.5876088},
  Owner                    = {magsilva},
  References               = {Edwards:2004, Jackson-Usher:1997, Saikkonen-etal:2001, Spacco-etal:2006:iticse, Spacco-etal:2006:oopsla, Edwards-PerezQuinones:2008},
  Status                   = {found(backward-snowballing), selected(full-text)},
  Timestamp                = {2014.05.27}
}

@InProceedings{Souza-etal:2012,
  Title                    = {Development and Evolution Aspects of a Environment to Support Teaching of Programming and Software Testing},
  Author                   = {Souza, D. M. d. and Maldonado, José M. and Barbosa, Ellen F.},
  Year                     = {2012},
  Pages                    = {1--10},

  Abstract                 = {Environments for submission and automated assessment of assignments have been developed as support for the teaching of programming and software testing. Among them, we highlight PROGTEST. However, the first version of PROGTEST support only Java language and structural testing criteria. In this paper we describe the evolution of PROGTEST, performed to make PROGTEST capable of supporting different programming languages and testing criteria. For this, we performed the analysis and integration to PROGTEST of different testing tools. The results obtained from the application of the new version of PROGTEST shows that it is capable of assess the programming and testing assignments more adequately.},
  Abstract-orig            = {Ambientes de apoio a submissão e avaliação automática de trabalhos práticos vêm sendo desenvolvidos como ferramentas de apoio ao ensino de programação e teste de software. Dentre eles, destaca-se a PROGTEST. Em sua primeira versão, a PROGTEST apenas apoiava a linguagem Java e critérios de teste estruturais. Este artigo descreve a evolução da PROGTEST a fim de torná-la capaz de apoiar diferentes linguagens de programação e critérios de teste. Para isso, foram analisadas e integradas à PROGTEST diferentes ferramentas de teste. Os resultados obtidos a partir de uma validação mostram que a PROGTEST, com as novas ferramentas, pode avaliar os trabalhos de programação e teste de uma forma mais adequada.},
  Crossref                 = {proceedings:sbie:2012},
  Lang                     = {pt},
  References               = {Spacco-etal:2006:oopsla, Dvornik-etal:2011, Edwards:2004, Janzen-Hossein:2006, Lahtinen-etal:2005, Souza-etal:2011:cseet, Souza-etal:2011},
  Status                   = {found(backward-snowballing), selected(full-text)},
  Timestamp                = {2013-09-22},
  Title-orig               = {Aspectos de Desenvolvimento e Evolução o de um Ambiente de Apoio ao Ensino de Programação e Teste de Software}
}

@InProceedings{Spacco-etal:2006:iticse,
  Title                    = {Experiences with {Marmoset}: designing and using an advanced submission and testing system for programming courses},
  Author                   = {Spacco, Jaime and Hovemeyer, David and Pugh, William and Emad, Fawzi and Hollingsworth, Jeffrey K. and Padua-Perez, Nelson},
  Year                     = {2006},
  Pages                    = {13--17},

  Abstract                 = {We developed Marmoset, an automated submission and testing system, to explore techniques to provide improved feedback to both students and instructors as students work on programming assignments, and to collect data to perform detailed research on the development processes of students. To address the issue of feedback, Marmoset provides students with limited access to the results of the instructor's private test cases using a novel token-based incentive system. This both encourages students to start their work early and to think critically about their work. Because students submit early, instructors can monitor all students' progress on test cases, helping identify challenging or ambiguous test cases early in order to update the project specification or devote additional time in lecture or lab sessions to the difficult test cases.To study and better understand the development process of students, Marmoset can be configured to transparently capture snapshots to a central repository everytime students save their files. These detailed development histories offer a unique, detailed perspective of each student's progress on a programming assignment, from the first line of code written and saved all the way through the final edit before the final submission. This type of data has proven extremely valuable many uses, such as mining new bug patterns and evaluating existing bug-finding tools.In this paper, we describe our initial experiences using Marmoset in several introductory computer science courses, from the perspectives of both instructors and students. We also describe some initial research results from analyzing the student snapshot database.},
  Crossref                 = {proceedings:iticse:2006},
  Doi                      = {10.1145/1140124.1140131},
  Keywords                 = {code snapshots, project submission, testing},
  Lang                     = {en},
  References               = {Reek:1996 , Saikkonen-etal:2001, Jackson-Usher:1997, Jones:2000},
  Status                   = {found(backward-snowballing), selected(full-text)}
}

@InProceedings{Spacco-etal:2006:oopsla,
  Title                    = {The {Marmoset} Project: An Automated Snapshot, Submission, and Testing System},
  Author                   = {Spacco, Jaime and Pugh, William and Ayewah, Nat and Hovemeyer, David},
  Year                     = {2006},
  Pages                    = {669--670},

  Abstract                 = {Marmoset is a framework for storing and testing student submissions to programming assignments. It gives students a limited ability to release test their code using an instructor's private suite of test cases. This encourages them to start early and implement their own test cases. It also provides facilities for instructors to manage the grading process and gives researchers access to fine-grained snapshots of the student development process.},
  Crossref                 = {proceedings:oopsla:2006},
  Doi                      = {10.1145/1176617.1176665},
  Keywords                 = {code snapshots, project submission, testing},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), selected(abstract)}
}

@InProceedings{Stamouli-etal:2006,
  Title                    = {Object Oriented Programming and Program Correctness: The Students' Perspective},
  Author                   = {Stamouli, Ioanna and Huggard, Meriel},
  Year                     = {2006},
  Pages                    = {109--118},

  Abstract                 = {Many Computer Science and Engineering curricula contain core modules on computer programming and programming languages. An increasing number of institutions choose to introduce undergraduates to programming through object oriented languages. As part of a longitudinal phenomenographic study we have set out to investigate the understanding of programming concepts that first year undergraduate students have when learning to program and think in the object oriented paradigm.The conceptions that students have developed on what learning to program really means and their perception of program correctness are explored; providing an insight into the levels of abstraction and complexity of the learners' understanding. Our findings suggest that the way students experience learning to program is related to their perception of what constitutes program correctness.},
  Crossref                 = {proceedings:icer:2006},
  Doi                      = {10.1145/1151588.1151605},
  Keywords                 = {learning to program, object oriented programming, phenomenography, program correctness},
  Lang                     = {en},
  Status                   = {found(backward-snowballing), excluded(not automatic assessment)}
}

@InProceedings{Tobar-etal:2001,
  Title                    = {An architecture for a collaborative environment to learn programming},
  Author                   = {Tobar, Carlos M. and Rosa, João L. G. and Coello, Juan M. A. and Pannain, R.},
  Year                     = {2001},
  Pages                    = {367--376},

  Abstract                 = {A problem faced in graduation programs of Computing and Informatics is to learnn to program in introductory courses. With the goal of addressing this issue, we propose a collaborative environment for learning of programming, following the procedural paradigm, that should allow the involvement of students, professors and intelligent systems, offering means for generation and discussion of ideas, problem solving, access and localization of online information, and motivation for students' participation.},
  Abstract-orig            = {Um dos problemas encontrados nos cursos de Computação e Informática é o aprendizado de programação nas disciplinas introdutórias. Com o objetivo de tentar resolver este problema, propõe-se um ambiente colaborativo para aprendizado de programação, seguindo o paradigma procedimental, que deve permitir o envolvimento de estudantes, professores e sistemas inteligentes, oferecendo meios para geração e discussão de idéias, resolução de problemas, acesso e localização de informação on-line útil, e motivação à participação dos estudantes.},
  Crossref                 = {proceedings:sbie:2001},
  Keywords                 = {Computing in Higher Education, Collaborative Learning Support by Computer , Learning Programming, Distributed Architectures for Educational Software},
  Lang                     = {pt},
  Owner                    = {mariane},
  Status                   = {found(backward-snowballing), selected(abstract)},
  Timestamp                = {2014.05.10},
  Title-orig               = {Uma Arquitetura de Ambiente Colaborativo para o Aprendizado de Programação}
}

@Misc{Bell:2012,
  Title                    = {Automated Student Code Assessment with Concolic Testing Thesis Related Work},

  Author                   = {Bell, Karl},
  HowPublished             = Text,
  Month                    = jun,
  Year                     = {2012},

  Abstract                 = {There has been a large amount of research in the areas of combined concrete and symbolic execution as a way of generating test inputs. However, the application of these techniques to the domains of education and code comparison has not been explored nearly as well. There are a number of tools aimed at automatic assessment of student programs but these usually rely on professor-generated test data. There has been only one tool which I could find that tried to automatically generate test inputs for student programs, but it was never released.},
  Lang                     = {en},
  Owner                    = {mariane},
  References               = {Dvornik-etal:2011},
  Status                   = {found(forward-snowballing), selected(abstract),},
  Timestamp                = {2014.10.08}
}

@Misc{software:moodle,
  Title                    = {Moodle (Modular Object-Oriented Dynamic Learning Environment)},

  Author                   = {Martin, Dougiamas and others},
  HowPublished             = software,
  Month                    = nov,
  Year                     = {2001},

  Lang                     = {en},
  Owner                    = {magsilva},
  Status                   = {found(backward-snowballing), selected(abstract)},
  Timestamp                = {2013-12-12},
  Url                      = {http://www.moodle.org}
}

@MastersThesis{Korhonen-1997,
  Title                    = {World Wide Web in Computer - Aided Learning of Algorithms and Data Structures},
  Author                   = {Korhonen, A.},
  School                   = {Helsinki University of Technology},
  Year                     = {1997},

  Address                  = Finland,

  Abstract                 = {In the thesis, World Wide Web (WWW) and hypermedia along with Internet-programming has been studied as a tool for constructing computer-aided learning environment for teaching algorithms and data structures. In order to find other similar computer-aided learning environments, a literature survey is carried out. The survey concentrates primarily on systems for teaching algorithms and data structures. Applications to visualize algorithms and data structures are also reported. In the implementation part of the thesis, a new Web-based computer-aided learning environment is implemented. Hypermedia properties of the Word Wide Web are used and a graphical and interactive user interface is implemented with Java programming language for TRAKLA - a computer-aided learning system of algorithms and data structures. The development of the system is based on implementing all the features of TRAKLA system in WWW and on developing a new visual and interactive user interface. The whole system is called WWW-TRAKLA. The system has a client/server architecture where traditionally coded TRAKLA-server communicates with an independent Java applet client. The main goal is to achieve a flexible and platform independent learning environment. With Java-compatible WWW-browsers those kind of systems are possible to implement. As an effective development tool, Java provides versatile tools for building easy-to-use applications and applets. In addition, graphical libraries of components are provided with Java compiler. Thus, the development of new visual and interactive applets is fast and convenient. With WWW and the net technology the system gains a new type of flexibility.},
  Lang                     = {en},
  Owner                    = {mariane},
  Status                   = {found(backward-snowballing), selected(abstract)},
  Timestamp                = {2014.05.23}
}

@Thesis{Naveed:2010,
  Title                    = {Multi-Attribute Metrics for Evaluating Quality of Student Programming Assignments},
  Author                   = {Naveed, Asad},
  School                   = {School of Computer Science and Software Engineering, The University of Western Australia},
  Year                     = {2010},

  Address                  = Autralia,

  Abstract                 = {Effective teaching of Programming to students is a topic of active research. A problem that is faced by instructors in beginner programming units is that assessing programming projects and providing feedback to students is a strenuous task.It normally takes several days for instructors to provide feedback to students, by which time it sometimes loses its significance. Moreover expert inspection is error prone. These limitations of instructor assessment can be solved by devising means for providing immediate automated feedback to students about their assignments. The obvious question then is how to assess the correctness and quality of students’ programs. The aim of this research is to design and evaluate compound metrics for assessing quality attributes of student programs. This would help to replace or supplement expert inspection with automatically calculated metrics. We approach this problem by gathering low level measurements about student programs and combining them into meaningful compound metrics. Two metrics are devised: i) Code Quality Metric (CQM) - to measure the quality of students programs and ii) Test Adequacy Score (TAS) - to measure the effectiveness of students’ unit tests. For each metric, we provide a method that utilises existing open source tools to gather data and calculate the metric automatically. We evaluate over 100 student projects from a first year Software Engineering unit in 2008 and 2009. The data gathered from these metrics is compared to the expert inspection score of the students’ code. The results demonstrate that both CQM and TAS are strongly correlated to expert inspection. Thus these metrics may be used in place of expert inspection by the instructor for student programming projects. This would make assessment of programming projects more efficient and comprehensive.},
  Lang                     = {en},
  Owner                    = {mariane},
  References               = {Janzen-Saiedian:2008},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.10.04}
}

@Monograph{Pontes-Miranda:2013,
  Title                    = {{AMAO} - Developing an online ambient to support correction and resolution of programming evaluation},
  Address                  = {Rio de Janeiro, RJ, } # Brazil,
  Author                   = {Pontes, Felipe A. and Miranda, Z. C. M.},
  Institution              = {Universidade Federal do Estado do Rio de Janeiro - Escola de Informática Aplicada},
  Month                    = aug,
  Pages                    = {96},
  Year                     = {2013},
  Abstract                 = {The present work will discuss the importance of a platform to assist at the process of creating, grading and resolution of programming exercises. Its goal is to propose an scalable, modularized, online auto-grading system (called AMAO) to help the programming learning using exclusively free softwares. During the development process we adopted the use of good development practices and technologies that are used by companies that are reference in the Information Technology market. In the first stage were surveyed the main characteristics of existing auto-grading tools, in order to reuse their concepts in AMAO's formulation. Afterwards, the obtained results guided in the proposed software development.},
  Abstract-orig            = {O presente trabalho discute a importância de uma plataforma de auxílio à criação, correção e resolução de avaliações de programação. Seu objetivo é propor um sistema, denominado AMAO, sendo este uma plataforma online de autocorreção para auxiliar no aprendizado de programação com as características de ser, escalável, modularizado e fazendo uso exclusivamente de softwares livres. Optou-se, ao longo de todo processo de construção da ferramenta, pelo emprego de boas práticas de desenvolvimento e de tecnologias que atualmente são utilizadas por empresas de referência no mercado de Tecnologia da Informação. Num primeiro estágio foram pesquisadas as principais características de ferramentas existentes de autocorreção a fim de aproveitar tais conceitos na formulação do AMAO. Os resultados obtidos orientaram, então, o desenvolvimento do software proposto.},
  Advisor                  = {Geiza Maria Hamazaki da Silva},
  Lang                     = {pt},
  Owner                    = {mariane},
  References               = {Moreira-Favero:2009},
  School                   = {Universidade Federal do Estado do Rio de Janeiro Centro de Ciências Exatas e Tecnologia Escola de Informática Aplicada},
  Status                   = {found(forward-snowballing), selected(abstract)},
  Timestamp                = {2014.10.04},
  Title-orig               = {AMAO - DESENVOLVIMENTO DE UM AMBIENTE ONLINE DE AUXÍLIO À CORREÇÃO E RESOLUÇÃO DE AVALIAÇÕES DE PROGRAMAÇÃO},
  Url                      = {http://bsi.uniriotec.br/tcc/201308PontesMiranda.pdf}
}

@Book{Skiena-Revilla:2003,
  Title                    = {Programming Challenges: The Programming Contest Training Manual},
  Author                   = {Steven S. Skiena and Miguel A. Revilla},
  Editor                   = {David Gries and Fred B. Schneider},
  Publisher                = {Springer},
  Year                     = {2003},

  Address                  = {New York, NY, } # USA,
  Edition                  = {1},
  Series                   = {Texts in Computer Science},

  Booktitle                = {Programming Challenges: The Programming Contest Training Manual},
  ISBN                     = {0-387-00163-8},
  Lang                     = {en},
  Pages                    = {359},
  Status                   = {found(backward-snowballing), selected(abstract)},
  Timestamp                = {2013-12-11}
}

@Proceedings{proceedings:worldcomp-fecs:2011,
  Title                    = {2011 World Congress in Computer Science, Computer Engineering and Applied Computing (WorldComp) -- 2011 International Conference on Frontiers in Education: Computer Science and Computer Engineering},
  Year                     = {2011},
  Editor                   = {Hamid R. Arabnia and Victor A. Clincy and Leonidas Deligiannidis},
  Month                    = jul,

  Booktitle                = {2011 World Congress in Computer Science, Computer Engineering and Applied Computing (WorldComp) -- 2011 International Conference on Frontiers in Education: Computer Science and Computer Engineering},
  Day                      = {18--21},
  ISBN                     = {1-60132-180-5},
  Lang                     = {en},
  Location                 = {Las Vegas, #USA#},
  Timestamp                = {2013-12-11}
}

@Proceedings{proceedings:sigcse:1994,
  Title                    = {25th SIGCSE Symposium on Computer Science Education},
  Year                     = {1994},

  Address                  = {New York, NY, } # USA,
  Editor                   = {Robert Beck and Don Goelman},
  Publisher                = {ACM},

  Booktitle                = {25th SIGCSE Symposium on Computer Science Education},
  ISBN                     = {0-89791-646-8},
  Lang                     = {en},
  Location                 = {Phoenix, Arizona, #USA#},
  Timestamp                = {2013-10-13}
}

@Proceedings{proceedings:sac:1995,
  Title                    = {10th Annual Symposium on Applied Computing},
  Year                     = {1995},

  Address                  = {New York, NY, } # USA,
  Editor                   = {George, K. M. and Carroll, Janice and Oppenheim, Dave},
  Month                    = feb,
  Publisher                = {ACM},

  Booktitle                = {10th Annual Symposium on Applied Computing},
  Days                     = {26--28},
  ISBN                     = {0-89791-658-1},
  Lang                     = {en},
  Location                 = {Nashville, Tennessee, #USA#}
}

@Proceedings{proceedings:sigcse:2000,
  Title                    = {31st SIGCSE Technical Symposium on Computer Science Education},
  Year                     = {2000},

  Address                  = {New York, NY, } # USA,
  Editor                   = {Haller, Susan},
  Month                    = mar,
  Publisher                = {ACM},

  Booktitle                = {31st SIGCSE Technical Symposium on Computer Science Education},
  Days                     = {8--12},
  ISBN                     = {1-58113-213-1},
  Lang                     = {en},
  Location                 = {Austin, Texas, #USA#}
}

@Proceedings{proceedings:sigcse:1996,
  Title                    = {27th SIGCSE Technical Symposium on Computer Science Education},
  Year                     = {1996},

  Address                  = {New York, NY, USA},
  Editor                   = {Klee, Karl J.},
  Publisher                = {ACM},

  Booktitle                = {27th SIGCSE Technical Symposium on Computer Science Education},
  ISBN                     = {0-89791-757-X},
  Lang                     = {en},
  Location                 = {Philadelphia, Pennsylvania, USA}
}

@Proceedings{proceedings:sigcse:1997,
  Title                    = {28th SIGCSE Technical Symposium on Computer Science Education},
  Year                     = {1997},

  Address                  = {New York, NY, USA},
  Editor                   = {Miller, James E.},
  Publisher                = {ACM},

  Booktitle                = {28th SIGCSE Technical Symposium on Computer Science Education},
  ISBN                     = {0-89791-889-4},
  Lang                     = {en},
  Location                 = {San Jose, California, #USA#}
}

@Proceedings{proceedings:cchee:1993,
  Title                    = {Conference on Computers and Hypermedia in Engineering Education},
  Year                     = {1993},
  Month                    = may,
  Publisher                = {Vaasa Institute of Technology},

  Booktitle                = {Conference on Computers and Hypermedia in Engineering Education},
  Owner                    = {mariane},
  Timestamp                = {2014.05.23}
}

@Proceedings{proceedings:iccbl:1993,
  Title                    = {International Conference of Computer Based Learning},
  Year                     = {1993},

  Address                  = {Vienna, } # Portugal,

  Booktitle                = {International Conference of Computer Based Learning},
  Owner                    = {mariane},
  Timestamp                = {2014.06.03}
}

@Proceedings{proceedings:acmse:1995,
  Title                    = {ACM 33rd Annual Southeast Regional Conference},
  Year                     = {1995},

  Address                  = {New York, NY, } # USA,
  Month                    = mar,
  Publisher                = {ACM},

  Booktitle                = {ACM 33rd Annual Southeast Regional Conference},
  Days                     = {17--18},
  ISBN                     = {0-89791747-2},
  Lang                     = {en},
  Location                 = {Clemson, South Carolina, #USA#}
}

@Proceedings{proceedings:seep:1998,
  Title                    = {1998 International Conference on Software Engineering: Education \& Practice},
  Year                     = {1998},

  Address                  = {Washington, DC, } # USA,
  Month                    = jan,
  Publisher                = {IEEE Computer Society},

  Booktitle                = {1998 International Conference on Software Engineering: Education \& Practice},
  Days                     = {26--29},
  ISBN                     = {0-8186-8828-9},
  Lang                     = {en},
  Location                 = {Dunedin, #New Zealand#}
}

@Proceedings{proceedings:sides:1998,
  Title                    = {3rd Symposium of Investigation and Development of Educational Software},
  Year                     = {1998},
  Month                    = sep,

  Booktitle                = {3rd Symposium of Investigation and Development of Educational Software},
  Days                     = {3--5},
  Lang                     = {pt},
  Location                 = {Évora, #Portugal#},
  Owner                    = {mariane},
  Timestamp                = {2014.05.14},
  Title-orig               = {3º Simpósio de Investigação e Desenvolvimento de Software Educativo}
}

@Proceedings{proceedings:sigcse:1999,
  Title                    = {13th SIGCSE Technical Symposium on Computer Science Cducation},
  Year                     = {1999},

  Address                  = {New York, NY, USA},
  Publisher                = {ACM},

  Booktitle                = {13th SIGCSE Technical Symposium on Computer Science Cducation},
  ISBN                     = {1-58113-085-6},
  Lang                     = {en},
  Location                 = {New Orleans, Louisiana, #USA#}
}

@Proceedings{proceedings:iticse:2000,
  Title                    = {5th Annual Conference on Innovation and Technology in Computer Science Education},
  Year                     = {2000},

  Address                  = {New York, NY, USA},
  Publisher                = {ACM},

  Booktitle                = {5th Annual Conference on Innovation and Technology in Computer Science Education},
  ISBN                     = {1-58113-207-7},
  Lang                     = {en},
  Location                 = {Helsinki, #Finland#}
}

@Proceedings{proceedings:iticse:2001,
  Title                    = {6th Annual Conference on Innovation and Technology in Computer Science Education},
  Year                     = {2001},

  Address                  = {New York, NY, USA},
  Publisher                = {ACM},

  Booktitle                = {6th Annual Conference on Innovation and Technology in Computer Science Education},
  ISBN                     = {1-58113-330-8},
  Lang                     = {en},
  Location                 = {Canterbury, United Kingdom}
}

@Proceedings{proceedings:sbie:2001,
  Title                    = {12th Brazilian Symposium on Informatics in Education},
  Year                     = {2001},

  Address                  = {Vitória, ES, } # Brazil,
  Month                    = nov,

  Booktitle                = {12th Brazilian Symposium on Informatics in Education},
  Lang                     = {pt},
  Owner                    = {mariane},
  Timestamp                = {2014.05.10},
  Title-orig               = {XII Simpósio em Informática na Educação}
}

@Proceedings{proceedings:sigcse:2001,
  Title                    = {32nd SIGCSE Technical Symposium on Computer Science Education},
  Year                     = {2001},

  Address                  = {New York, NY, } # USA,
  Month                    = feb,
  Publisher                = {ACM},

  Accepted-papers          = {78},
  Booktitle                = {32nd SIGCSE Technical Symposium on Computer Science Education},
  Day                      = {21--25},
  ISBN                     = {1-58113-329-4},
  Lang                     = {en},
  Location                 = {Charlotte, NC, #USA#},
  Submitted-papers         = {225}
}

@Proceedings{proceedings:sigcse:2002,
  Title                    = {33rd SIGCSE Technical Symposium on Computer Science Education},
  Year                     = {2002},

  Address                  = {New York, NY, } # USA,
  Month                    = feb # {--} # mar,
  Publisher                = {ACM},

  Accepted-papers          = {74},
  Booktitle                = {33rd SIGCSE Technical Symposium on Computer Science Education},
  Day                      = {27--3},
  ISBN                     = {1-58113-473-8},
  Lang                     = {en},
  Location                 = {Cincinnati, KY, #USA#},
  Submitted-papers         = {235}
}

@Proceedings{proceedings:oopsla-companion:2003,
  Title                    = {18th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  Year                     = {2003},

  Address                  = {New York, NY, } # USA,
  Month                    = oct,
  Publisher                = {ACM},

  Booktitle                = {18th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  Day                      = {26--30},
  ISBN                     = {1-58113-751-6},
  Lang                     = {en},
  Location                 = {Anaheim, CA, #USA#}
}

@Proceedings{proceedings:sigcse:2004,
  Title                    = {35th SIGCSE Technical Symposium on Computer Science Education},
  Year                     = {2004},

  Address                  = {New York, NY, } # USA,
  Month                    = mar,
  Publisher                = {ACM},

  Accepted-papers          = {90},
  Booktitle                = {35th SIGCSE Technical Symposium on Computer Science Education},
  Day                      = {3--7},
  ISBN                     = {1-58113-798-2},
  Lang                     = {en},
  Location                 = {Norfolk, VA, #USA#},
  Submitted-papers         = {320}
}

@Proceedings{proceedings:wei:2004,
  Title                    = {12th Workshop on Education in Computing},
  Year                     = {2004},
  Month                    = aug,

  Booktitle                = {12th Workshop on Education in Computing},
  Lang                     = {pt},
  Owner                    = {mariane},
  Title-orig               = {XII Workshop de Educação em Computação}
}

@Proceedings{proceedings:iticse:2005,
  Title                    = {10th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
  Year                     = {2005},

  Address                  = {New York, NY, } # USA,
  Month                    = jun,
  Publisher                = {ACM},

  Booktitle                = {10th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
  Day                      = {26--29},
  ISBN                     = {1-59593-024-8},
  Lang                     = {en},
  Location                 = {Capacrica, #Portugal#},
  Timestamp                = {2013-10-13}
}

@Proceedings{proceedings:sulcomp:2005,
  Title                    = {1st South-Catarin Congress on Computing},
  Year                     = {2005},

  Address                  = {Criciúma, SC, } # Brazil,
  Month                    = sep # {--} # oct,

  Booktitle                = {1st South-Catarin Congress on Computing},
  Lang                     = {pt},
  Title-orig               = {I Congresso Sul Catarinense de Computação}
}

@Proceedings{proceedings:wei:2005,
  Title                    = {15th Workshop on Education in Computing},
  Year                     = {2005},

  Address                  = {Florianópolis, SC, } # Brazil,
  Month                    = mar,

  Booktitle                = {15th Workshop on Education in Computing},
  Owner                    = {mariane},
  Timestamp                = {2014.05.10}
}

@Proceedings{proceedings:icer:2006,
  Title                    = {2nd International Workshop on Computing Education Research},
  Year                     = {2006},

  Address                  = {New York, NY, USA},
  Month                    = sep,
  Publisher                = {ACM},

  Booktitle                = {2nd International Workshop on Computing Education Research},
  Days                     = {9--10},
  ISBN                     = {1-59593-494-4},
  Location                 = {Canterbury, #UK#}
}

@Proceedings{proceedings:iticse:2006,
  Title                    = {11th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
  Year                     = {2006},

  Address                  = {New York, NY, } # USA,
  Month                    = jun,
  Publisher                = {ACM},

  Booktitle                = {11th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
  Day                      = {26--28},
  ISBN                     = {1-59593-055-8},
  Lang                     = {en},
  Location                 = {Bologna, #Italy#}
}

@Proceedings{proceedings:oopsla:2006,
  Title                    = {21st Annual ACM SIGPLAN Symposium on Object-Oriented Programming Systems, Languages, and Applications},
  Year                     = {2006},

  Address                  = {New York, NY, } # USA,
  Publisher                = {ACM},

  Booktitle                = {21st Annual ACM SIGPLAN Symposium on Object-Oriented Programming Systems, Languages, and Applications},
  ISBN                     = {1-59593-491-X},
  Lang                     = {en},
  Location                 = {Portland, Oregon, #USA#},
  Timestamp                = {2013-10-13}
}

@Proceedings{proceedings:sigcse:2006,
  Title                    = {37th SIGCSE Technical Symposium on Computer Science Education},
  Year                     = {2006},
  Month                    = mar,
  Publisher                = {ACM},

  Booktitle                = {37th SIGCSE Technical Symposium on Computer Science Education},
  Days                     = {1--5},
  ISBN                     = {1-59593-259-3},
  Lang                     = {en},
  Location                 = {Houston, Texas, #USA#},
  Timestamp                = {2013-10-24}
}

@Proceedings{proceedings:fie:2008,
  Title                    = {38th Annual Frontiers in Education Conference},
  Year                     = {2008},
  Month                    = oct,
  Publisher                = {IEEE},

  Booktitle                = {38th Annual Frontiers in Education Conference},
  Day                      = {22--25},
  E-isbn                   = {978-1-4244-1970-8},
  ISBN                     = {978-1-4244-1969-2},
  ISSN                     = {0190-5848},
  Lang                     = {en},
  Location                 = {Saratoga Springs, NY, #USA#},
  Timestamp                = {2013-12-11}
}

@Proceedings{proceedings:iticse:2008,
  Title                    = {13th Annual Conference on Innovation and Technology in Computer Science Education},
  Year                     = {2008},

  Address                  = {New York, NY, } # USA,
  Publisher                = {ACM},

  Booktitle                = {13th Annual Conference on Innovation and Technology in Computer Science Education},
  ISBN                     = {978-1-60558-078-4},
  Location                 = {Madrid, #Spain#}
}

@Proceedings{proceedings:sigcse:2008,
  Title                    = {39th SIGCSE Technical Symposium on Computer Science Education},
  Year                     = {2008},
  Month                    = mar,
  Publisher                = {ACM},

  Booktitle                = {39th SIGCSE Technical Symposium on Computer Science Education},
  Days                     = {12--15},
  ISBN                     = {978-1-59593-799-5},
  Lang                     = {en},
  Location                 = {Portland, OR, #USA#},
  Timestamp                = {2013-10-24}
}

@Proceedings{proceedings:wei:2008,
  Title                    = {16th Workshop on Education in Computing},
  Year                     = {2008},

  Address                  = {Belem, PA, } # Brazil,
  Month                    = jul,

  Booktitle                = {16th Workshop on Education in Computing},
  Day                      = {14--16},
  Lang                     = {pt},
  Location                 = {Belem, PA, #Brazil#},
  Owner                    = {mariane},
  Timestamp                = {2013.10.06},
  Title-orig               = {XVI Workshop Sobre Educação em Computação}
}

@Proceedings{proceedings:sbie:2009,
  Title                    = {20th Brazilian Symposium on Informatics in Education},
  Year                     = {2009},
  Month                    = nov,
  Publisher                = {SBC},
  Series                   = {SBIE},

  Booktitle                = {20th Brazilian Symposium on Informatics in Education},
  Day                      = {17--20},
  ISSN                     = {2176-4301},
  Lang                     = {pt},
  Location                 = {Florianópolis, SC, #Brazil#},
  Title-orig               = {XX Simpósio Brasileiro de Informática na Educação}
}

@Proceedings{proceedings:wei:2009,
  Title                    = {17th Workshop on Education in Computing},
  Year                     = {2009},

  Address                  = {Bento Gonçalves, RS, } # Brazil,
  Month                    = jul,

  Booktitle                = {17th Workshop on Education in Computing},
  Day                      = {21--24},
  Lang                     = {pt},
  Location                 = {Bento Gonçalves, RS, #Brazil#},
  Owner                    = {mariane},
  Timestamp                = {2013.10.06},
  Title-orig               = {XVII Workshop Sobre Educação em Computação}
}

@Proceedings{proceedings:cstvvw:2010,
  Title                    = {30th International Conference on Software Testing, Verification, and Validation Workshops},
  Year                     = {2010},

  Booktitle                = {30th International Conference on Software Testing, Verification, and Validation Workshops},
  Owner                    = {mariane},
  Timestamp                = {2014.07.18}
}

@Proceedings{proceedings:iticse:2010,
  Title                    = {15th Annual Conference on Innovation and Technology in Computer Science Education},
  Year                     = {2010},
  Month                    = jun,
  Publisher                = {ACM},

  Booktitle                = {15th Annual Conference on Innovation and Technology in Computer Science Education},
  Days                     = {26--30},
  ISBN                     = {978-1-60558-820-9},
  Lang                     = {en},
  Location                 = {Bilkent, Ankara, #Turkey#}
}

@Proceedings{proceedings:applets:2011,
  Title                    = {1st Workshop on Applications to Provide Learning and Teaching Support (APPLETS)},
  Year                     = {2011},
  Month                    = oct,

  Booktitle                = {1st Workshop on Applications to Provide Learning and Teaching Support (APPLETS)},
  Day                      = {21},
  ISSN                     = {2176-4301},
  Lang                     = {pt},
  Location                 = {Aracaju, SE, #Brazil#},
  Timestamp                = {2013-10-13}
}

@Proceedings{proceedings:cseet:2011,
  Title                    = {24th Conference on Software Engineering Education and Training},
  Year                     = {2011},

  Address                  = {Washington, DC, } # USA,
  Month                    = may,
  Publisher                = {IEEE Computer Society},

  Booktitle                = {24th Conference on Software Engineering Education and Training},
  Days                     = {22--24},
  ISBN                     = {978-1-4577-0349-2},
  ISSN                     = {1093-0175},
  Lang                     = {en},
  Location                 = {Waikiki, Hawaii, #USA#}
}

@Proceedings{proceedings:iceta:2011,
  Title                    = {9th IEEE International Conference on Emerging eLearning Technologies and Applications},
  Year                     = {2011},

  Address                  = {Stará Lesná, SL, } # Slovakia,
  Month                    = oct,
  Publisher                = {IEEE Computer Society},

  Booktitle                = {9th IEEE International Conference on Emerging eLearning Technologies and Applications},
  Days                     = {27--28},
  ISBN                     = {978-1-4577-0051-4},
  Location                 = {Stará Lesná, SL, #Slovakia#},
  Owner                    = {mariane},
  Timestamp                = {2014.10.04}
}

@Proceedings{proceedings:sbie:2011,
  Title                    = {22nd Brazilian Symposium on Informatics in Education},
  Year                     = {2011},

  Address                  = {Aracaju, SE, } # Brazil,
  Month                    = nov,
  Publisher                = {SBC},

  Booktitle                = {22nd Brazilian Symposium on Informatics in Education},
  Days                     = {21--25},
  ISSN                     = {2176-4301},
  Lang                     = {pt},
  Location                 = {Aracaju, SE, #Brazil#},
  Papers-submitted         = {376},
  Timestamp                = {2013.09.30},
  Title-en                 = {22nd Brazilian Symposium of Informatics on Education},
  Title-orig               = {XXII Simpósio Brasileiro de Informática na Educação}
}

@Proceedings{proceedings:iticse:2012,
  Title                    = {17th ACM Annual Conference on Innovation and Technology in Computer Science Education},
  Year                     = {2012},

  Address                  = {New York, NY, } # USA,
  Publisher                = {ACM},

  Booktitle                = {17th ACM Annual Conference on Innovation and Technology in Computer Science Education},
  ISBN                     = {978-1-4503-1246-2},
  Location                 = {Haifa, #Israel#},
  Owner                    = {mariane},
  Timestamp                = {2014.10.15}
}

@Proceedings{proceedings:sbie:2012,
  Title                    = {23rd Brazilian Symposium on Informatics in Education},
  Year                     = {2012},

  Address                  = {Rio de Janeiro, RJ, } # Brazil,
  Month                    = nov,

  Booktitle                = {23rd Brazilian Symposium on Informatics in Education},
  Day                      = {26--30},
  ISSN                     = {2316-6533},
  Lang                     = {pt},
  Location                 = {Rio de Janeiro, RJ, #Brazil#},
  Timestamp                = {2013-10-13},
  Title-en                 = {23rd Brazilian Symposium of Informatics on Education},
  Title-orig               = {XXIII Simpósio Brasileiro de Informática na Educação}
}

@Proceedings{proceedings:esud:2013,
  Title                    = {10th Brazilian Congress on Distance Learning for Higher Education},
  Year                     = {2013},
  Month                    = jun,
  Publisher                = {UNIREDE},

  Booktitle                = {10th Brazilian Congress on Distance Learning for Higher Education},
  Day                      = {11--13},
  Lang                     = {pt},
  Location                 = {Belém, PA, #Brazil#},
  Timestamp                = {2013-09-22},
  Title-orig               = {X Congresso Brasileiro de Ensino Superior a Distância}
}

@Proceedings{proceedings:icse:2013,
  Title                    = {ICSE '13: Proceedings of the 2013 International Conference on Software Engineering},
  Year                     = {2013},

  Address                  = {Piscataway, NJ, } # USA,
  Month                    = may,
  Publisher                = {IEEE Press},

  Booktitle                = {ICSE '13: Proceedings of the 2013 International Conference on Software Engineering},
  ISBN                     = {978-1-4673-3076-3},
  Location                 = {San Francisco, CA, USA},
  Owner                    = {mariane},
  Timestamp                = {2014.10.04}
}

@Proceedings{proceedings:sbie:2013,
  Title                    = {24th Brazilian Symposium on Informatics in Education},
  Year                     = {2013},

  Address                  = {Campinas, SP, } # Brazil,
  Month                    = nov,

  Booktitle                = {24th Brazilian Symposium on Informatics in Education},
  Owner                    = {mariane},
  Timestamp                = {2014.10.04}
}

@Proceedings{proceedings:tise:2013,
  Title                    = {XIII International Conference on Computers Education},
  Year                     = {2013},

  Address                  = {Porto Alegre, RS, } # Brazil,
  Month                    = dec,

  Booktitle                = {XIII International Conference on Computers Education},
  Owner                    = {mariane},
  Timestamp                = {2014.09.29}
}

@Journal{journal:acm:cfcsic,
  Address                  = USA,
  ISSN                     = {0360-1315},
  Journal                  = {Journal of Computing Sciences in Colleges},
  Publisher                = {Consortium for Computing Sciences in Colleges},
  Timestamp                = {2013-10-13}
}

@Journal{journal:acm:jeric,
  Address                  = {New York, NY, } # USA,
  ISSN                     = {1531-4278},
  Journal                  = {Journal on Education Resources in Computing},
  Publisher                = {ACM}
}

@Journal{journal:acm:sigcse-bulletin,
  Address                  = {New York, NY, } # USA,
  ISSN                     = {0097-8418},
  Journal                  = {SIGCSE Bulletin},
  Publisher                = {ACM},
  Owner                    = {magsilva},
  Timestamp                = {2014.05.04}
}

@Journal{journal:bjocie:sbc,
  Address                  = Brazil,
  Journal                  = {Brazilian Journal of Computing in Education},
  Publisher                = {SBC},
  Owner                    = {mariane},
  Timestamp                = {2014.10.04}
}

@Journal{journal:cinted:2013,
  Address                  = Brazil,
  Journal                  = {New Technologies on Education},
  Publisher                = {Interdisciplinary Center the New Technologies on Education},
  Booktitle                = {New Technologies on Education},
  Owner                    = {mariane},
  Timestamp                = {2014.09.29}
}

@Journal{journal:elsevier:ce,
  Address                  = Netherlands,
  ISSN                     = {0360-1315},
  Journal                  = {Computers \& Education},
  Publisher                = {Elsevier},
  Timestamp                = {2013-10-13}
}

@Journal{journal:iaeng:2013,
  Journal                  = {IAENG International Journal of Computer Science},
  Owner                    = {mariane},
  Timestamp                = {2014.10.07}
}

@Journal{journal:ist:elsevier,
  Journal                  = {Information and Software Technology},
  Publisher                = {ELSEVIER},
  Owner                    = {mariane},
  Timestamp                = {2014.10.07}
}

@Journal{journal:uscs:joac,
  Address                  = Brazil,
  Journal                  = {Journal of Applied Computing},
  Publisher                = {USCS - University of São Caetano do Sul},
  Owner                    = {mariane},
  Timestamp                = {2014.10.03}
}

@Comment{jabref-meta: databaseType:biblatex;}

@Comment{jabref-entrytype: Journal: req[address;e-issn;issn;journal;publisher] opt[]}

@Comment{jabref-entrytype: Monograph: req[address;author;institution;month;pages;title;year] opt[]}
